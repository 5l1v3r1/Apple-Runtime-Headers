//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeAI/HMFLogging-Protocol.h>
#import <HomeAI/HMISystemResourceUsageMonitorDelegate-Protocol.h>

@class HMIAnalysisService, HMICameraVideoAnalyzerConfiguration, HMICameraVideoPosterFrameGenerator, HMISystemResourceUsageMonitor, NSLock, NSMutableArray, NSObject, NSString, NSUUID;
@protocol HMICameraVideoAnalyzerDelegate, OS_dispatch_queue;

@interface HMICameraVideoAnalyzer : HMFObject <HMISystemResourceUsageMonitorDelegate, HMFLogging>
{
    _Bool _skipSequentialMediaIntegrityCheck;
    _Bool _analysisInProgress;
    _Bool _inErrorState;
    _Bool _sessionEnded;
    _Bool _uploadVideoAnalysisEvent;
    long long _currentSystemResourceUsageLevel;
    id <HMICameraVideoAnalyzerDelegate> _delegate;
    NSUUID *_identifier;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMISystemResourceUsageMonitor *_systemResourceUsageMonitor;
    NSLock *_lock;
    unsigned long long _mediaIntegritySequenceNumber;
    NSMutableArray *_pendingRequests;
    HMICameraVideoPosterFrameGenerator *_posterFrameGenerator;
    HMICameraVideoAnalyzerConfiguration *_videoAnalyzerConfiguration;
    long long _events;
    NSMutableArray *_videoFrameResults;
    long long _fragmentAnalysisResultCode;
    HMIAnalysisService *_remoteAnalysisService;
}

+ (id)logCategory;
+ (id)queryVersionInformation;
+ (unsigned long long)getAnalysisFPSPreference;
+ (id)averageTimeToAnalyzeFragment;
+ (id)fpsSelector;
@property(readonly, getter=shouldUploadVideoAnalysisEvent) _Bool uploadVideoAnalysisEvent; // @synthesize uploadVideoAnalysisEvent=_uploadVideoAnalysisEvent;
@property(getter=isSessionEnded) _Bool sessionEnded; // @synthesize sessionEnded=_sessionEnded;
@property(retain, nonatomic) HMIAnalysisService *remoteAnalysisService; // @synthesize remoteAnalysisService=_remoteAnalysisService;
@property long long fragmentAnalysisResultCode; // @synthesize fragmentAnalysisResultCode=_fragmentAnalysisResultCode;
@property(retain) NSMutableArray *videoFrameResults; // @synthesize videoFrameResults=_videoFrameResults;
@property long long events; // @synthesize events=_events;
@property(retain) HMICameraVideoAnalyzerConfiguration *videoAnalyzerConfiguration; // @synthesize videoAnalyzerConfiguration=_videoAnalyzerConfiguration;
@property(retain) HMICameraVideoPosterFrameGenerator *posterFrameGenerator; // @synthesize posterFrameGenerator=_posterFrameGenerator;
@property(retain) NSMutableArray *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(getter=isInErrorState) _Bool inErrorState; // @synthesize inErrorState=_inErrorState;
@property(getter=isAnalysisInProgress) _Bool analysisInProgress; // @synthesize analysisInProgress=_analysisInProgress;
@property(readonly) _Bool skipSequentialMediaIntegrityCheck; // @synthesize skipSequentialMediaIntegrityCheck=_skipSequentialMediaIntegrityCheck;
@property unsigned long long mediaIntegritySequenceNumber; // @synthesize mediaIntegritySequenceNumber=_mediaIntegritySequenceNumber;
@property(readonly) NSLock *lock; // @synthesize lock=_lock;
@property(retain) HMISystemResourceUsageMonitor *systemResourceUsageMonitor; // @synthesize systemResourceUsageMonitor=_systemResourceUsageMonitor;
@property(readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
@property __weak id <HMICameraVideoAnalyzerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_sendAnalyticsEventForFragment:(id)arg1 error:(id)arg2;
- (void)_sendAnalyticsEventForFragment:(id)arg1 result:(id)arg2;
- (void)systemResourceUsageDidChangeTo:(long long)arg1;
- (id)logIdentifier;
- (id)videoAnnotationScoresForFrameResult:(id)arg1;
- (_Bool)uploadVideoAnalysisEventPreference;
- (long long)getSystemResourceUsageLevelPreference;
- (long long)getSystemResourceUsageLevel;
- (long long)resetFrameEvents:(long long)arg1;
- (_Bool)analyzeVideoFrame:(id)arg1 videoFragment:(id)arg2 error:(id *)arg3 events:(long long *)arg4;
- (_Bool)shouldContinueAnalysis:(float)arg1 analysisStartTime:(id)arg2 fragmentSequenceNumber:(unsigned long long)arg3;
- (double)computeRemainingAnalysisTimeFromStartTime:(id)arg1;
- (_Bool)_analyzeFramesFromFragment:(id)arg1 frameSelector:(id)arg2 error:(id *)arg3;
- (_Bool)_analyzeVideoHavingAttributes:(id)arg1 usingReader:(id)arg2 error:(id *)arg3;
- (void)_handlePendingRequestsIfNeeded;
- (void)_failPendingRequests;
- (void)_handleDidNotAnalyzeVideoFragment:(id)arg1 attributes:(id)arg2 timeToAnalyzeFragment:(double)arg3;
- (void)_handleError:(id)arg1 videoFragment:(id)arg2;
- (void)_analyze:(id)arg1;
- (id)transcodeFragment:(id)arg1;
- (void)_analyzeFragmentRemotely:(id)arg1 retryOnConnectionInterruption:(_Bool)arg2;
- (void)clearPendingFragments;
- (void)_analyzeIfPossible:(id)arg1;
- (void)analyzeFragment:(id)arg1;
- (void)_createSystemResourceUsageMonitor;
- (id)initWithConfiguration:(id)arg1 identifier:(id)arg2;
@property long long currentSystemResourceUsageLevel; // @synthesize currentSystemResourceUsageLevel=_currentSystemResourceUsageLevel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

