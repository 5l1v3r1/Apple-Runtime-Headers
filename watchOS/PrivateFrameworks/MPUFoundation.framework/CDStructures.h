//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct EntriesContainer {
    struct vector<MPU::LayoutInterpolator::Entry, std::__1::allocator<MPU::LayoutInterpolator::Entry>> _field1;
    float _field2;
};

struct Entry {
    float _field1;
    float _field2;
};

struct Point3D {
    float _field1;
    float _field2;
    float _field3;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UIOffset {
    float horizontal;
    float vertical;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct vector<MPU::LayoutInterpolator::EntriesContainer, std::__1::allocator<MPU::LayoutInterpolator::EntriesContainer>> {
    struct EntriesContainer *__begin_;
    struct EntriesContainer *__end_;
    struct __compressed_pair<MPU::LayoutInterpolator::EntriesContainer *, std::__1::allocator<MPU::LayoutInterpolator::EntriesContainer>> {
        struct EntriesContainer *__value_;
    } __end_cap_;
};

struct vector<MPU::LayoutInterpolator::Entry, std::__1::allocator<MPU::LayoutInterpolator::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<MPU::LayoutInterpolator::Entry *, std::__1::allocator<MPU::LayoutInterpolator::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<MPU::Point3D, std::__1::allocator<MPU::Point3D>> {
    struct Point3D *_field1;
    struct Point3D *_field2;
    struct __compressed_pair<MPU::Point3D *, std::__1::allocator<MPU::Point3D>> {
        struct Point3D *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    float ascender;
    _Bool isAscenderInitialized;
    float bodyLeading;
    _Bool isBodyLeadingInitialized;
    float capHeight;
    _Bool isCapHeightInitialized;
    float descender;
    _Bool isDescenderInitialized;
    float lineHeight;
    _Bool isLineHeightInitialized;
} CDStruct_573ef51d;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_dff9a9da;

// Template types
typedef struct vector<MPU::Point3D, std::__1::allocator<MPU::Point3D>> {
    struct Point3D *_field1;
    struct Point3D *_field2;
    struct __compressed_pair<MPU::Point3D *, std::__1::allocator<MPU::Point3D>> {
        struct Point3D *_field1;
    } _field3;
} vector_c97e033f;

