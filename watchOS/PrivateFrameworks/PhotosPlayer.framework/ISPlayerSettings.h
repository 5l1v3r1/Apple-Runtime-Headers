//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <PhotosPlayer/ISSettings.h>

@interface ISPlayerSettings : ISSettings
{
    _Bool _easingEnabled;
    _Bool _scaleDuringPlayback;
    _Bool _loopingEnabled;
    _Bool _crossfadeEnabled;
    _Bool _audioEnabled;
    _Bool _playIsSticky;
    _Bool _longExposureVitality;
    _Bool _playDuringHint;
    _Bool _showStateOverlay;
    _Bool _prerollBeforePlaying;
    _Bool _useDedicatedQueues;
    _Bool _allowFrameBlending;
    _Bool _allowVideoPreRoll;
    _Bool _allowPlayerReuse;
    float _vitalityEaseMinRate;
    int _startBehavior;
    float _forceTouchTimeoutMinimumProgress;
    float _forceScrubMinimumPressure;
    float _forceScrubMaximumPressure;
    float _forceScrubRewindFactor;
    float _forceScrubMinRateChange;
    float _forceScrubMinimumRate;
    float _forceScrubMaximumInteractiveRate;
    float _audioRampDuration;
    double _photoTransitionAdjustment;
    double _minimumPhotoTransitionDuration;
    double _minimumColorAdjustedPhotoTransitionDuration;
    double _vitalityEaseDuration;
    double _forceTouchTimeoutInterval;
}

+ (id)settingsControllerModule;
+ (id)sharedInstance;
@property(nonatomic) float audioRampDuration; // @synthesize audioRampDuration=_audioRampDuration;
@property(nonatomic) float forceScrubMaximumInteractiveRate; // @synthesize forceScrubMaximumInteractiveRate=_forceScrubMaximumInteractiveRate;
@property(nonatomic) float forceScrubMinimumRate; // @synthesize forceScrubMinimumRate=_forceScrubMinimumRate;
@property(nonatomic) float forceScrubMinRateChange; // @synthesize forceScrubMinRateChange=_forceScrubMinRateChange;
@property(nonatomic) float forceScrubRewindFactor; // @synthesize forceScrubRewindFactor=_forceScrubRewindFactor;
@property(nonatomic) float forceScrubMaximumPressure; // @synthesize forceScrubMaximumPressure=_forceScrubMaximumPressure;
@property(nonatomic) float forceScrubMinimumPressure; // @synthesize forceScrubMinimumPressure=_forceScrubMinimumPressure;
@property(nonatomic) float forceTouchTimeoutMinimumProgress; // @synthesize forceTouchTimeoutMinimumProgress=_forceTouchTimeoutMinimumProgress;
@property(nonatomic) double forceTouchTimeoutInterval; // @synthesize forceTouchTimeoutInterval=_forceTouchTimeoutInterval;
@property(nonatomic) _Bool allowPlayerReuse; // @synthesize allowPlayerReuse=_allowPlayerReuse;
@property(nonatomic) _Bool allowVideoPreRoll; // @synthesize allowVideoPreRoll=_allowVideoPreRoll;
@property(nonatomic) _Bool allowFrameBlending; // @synthesize allowFrameBlending=_allowFrameBlending;
@property(nonatomic) _Bool useDedicatedQueues; // @synthesize useDedicatedQueues=_useDedicatedQueues;
@property(nonatomic) _Bool prerollBeforePlaying; // @synthesize prerollBeforePlaying=_prerollBeforePlaying;
@property(nonatomic) _Bool showStateOverlay; // @synthesize showStateOverlay=_showStateOverlay;
@property(nonatomic) _Bool playDuringHint; // @synthesize playDuringHint=_playDuringHint;
@property(nonatomic) _Bool longExposureVitality; // @synthesize longExposureVitality=_longExposureVitality;
@property(nonatomic) _Bool playIsSticky; // @synthesize playIsSticky=_playIsSticky;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) _Bool crossfadeEnabled; // @synthesize crossfadeEnabled=_crossfadeEnabled;
@property(nonatomic) _Bool loopingEnabled; // @synthesize loopingEnabled=_loopingEnabled;
@property(nonatomic) _Bool scaleDuringPlayback; // @synthesize scaleDuringPlayback=_scaleDuringPlayback;
@property(nonatomic) int startBehavior; // @synthesize startBehavior=_startBehavior;
@property(nonatomic) float vitalityEaseMinRate; // @synthesize vitalityEaseMinRate=_vitalityEaseMinRate;
@property(nonatomic) double vitalityEaseDuration; // @synthesize vitalityEaseDuration=_vitalityEaseDuration;
@property(nonatomic) _Bool easingEnabled; // @synthesize easingEnabled=_easingEnabled;
@property(nonatomic) double minimumColorAdjustedPhotoTransitionDuration; // @synthesize minimumColorAdjustedPhotoTransitionDuration=_minimumColorAdjustedPhotoTransitionDuration;
@property(nonatomic) double minimumPhotoTransitionDuration; // @synthesize minimumPhotoTransitionDuration=_minimumPhotoTransitionDuration;
@property(nonatomic) double photoTransitionAdjustment; // @synthesize photoTransitionAdjustment=_photoTransitionAdjustment;
- (void)setDefaultValues;

@end

