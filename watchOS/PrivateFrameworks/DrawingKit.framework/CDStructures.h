//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CGVector {
    float _field1;
    float _field2;
};

struct Page;

struct Vertex;

struct VertexGroup;

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>;

struct vector<Page, std::__1::allocator<Page>> {
    struct Page *__begin_;
    struct Page *__end_;
    struct __compressed_pair<Page *, std::__1::allocator<Page>> {
        struct Page *__value_;
    } __end_cap_;
};

struct vector<Vertex, std::__1::allocator<Vertex>> {
    struct Vertex *__begin_;
    struct Vertex *__end_;
    struct __compressed_pair<Vertex *, std::__1::allocator<Vertex>> {
        struct Vertex *__value_;
    } __end_cap_;
};

struct vector<VertexGroup, std::__1::allocator<VertexGroup>> {
    struct VertexGroup *__begin_;
    struct VertexGroup *__end_;
    struct __compressed_pair<VertexGroup *, std::__1::allocator<VertexGroup>> {
        struct VertexGroup *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>, std::__1::allocator<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>>> {
    struct pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))> *__begin_;
    struct pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))> *__end_;
    struct __compressed_pair<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>*, std::__1::allocator<std::__1::pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))>>> {
        struct pair<float __attribute__((ext_vector_type(2))), float __attribute__((ext_vector_type(2)))> *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    struct CGPoint _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_4ad0e195;

// Template types
typedef struct vector<Vertex, std::__1::allocator<Vertex>> {
    struct Vertex *__begin_;
    struct Vertex *__end_;
    struct __compressed_pair<Vertex *, std::__1::allocator<Vertex>> {
        struct Vertex *__value_;
    } __end_cap_;
} vector_b8c3c0c5;

