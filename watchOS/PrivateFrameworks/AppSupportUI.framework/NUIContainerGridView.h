//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <AppSupportUI/NUIContainerView.h>

#import "_NUIGridArrangementContainer.h"

@class NSMutableArray, NSString;

@interface NUIContainerGridView : NUIContainerView <_NUIGridArrangementContainer>
{
    NSMutableArray *_viewRows;
    struct _NUIGridArrangement _visibleArrangement;
    struct CGSize _visibleCount;
    struct map<UIView *, const std::__1::pair<_NSRange, _NSRange>, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, const std::__1::pair<_NSRange, _NSRange>>>> _viewRanges;
    struct map<unsigned int, const std::__1::pair<UIView *, UIView *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const std::__1::pair<UIView *, UIView *>>>> _rowBaselineViews;
    struct CGSize _spacing;
    struct vector<_NUIGridViewDimensionConfiguration, std::__1::allocator<_NUIGridViewDimensionConfiguration>> _rows;
    struct vector<_NUIGridViewDimensionConfiguration, std::__1::allocator<_NUIGridViewDimensionConfiguration>> _columns;
    struct {
        unsigned int inInsertOrRemove:1;
        unsigned int pendingUpdate:1;
        unsigned int delegateMinSpacing:1;
        unsigned int delegateMinDirectionalSpacing:1;
        unsigned int delegateHorizontalAlignment:1;
        unsigned int delegateVerticalAlignment:1;
    } _gridViewFlags;
    int _horizontalAlignment;
    int _verticalAlignment;
    float _rowHeight;
    float _columnWidth;
}

@property(nonatomic) float columnWidth; // @synthesize columnWidth=_columnWidth;
@property(nonatomic) float rowHeight; // @synthesize rowHeight=_rowHeight;
@property(nonatomic) int verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) int horizontalAlignment; // @synthesize horizontalAlignment=_horizontalAlignment;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)populateGridArrangementDimension:(vector_b8a5df6e *)arg1 withCells:(const vector_f8404f95 *)arg2 axis:(int)arg3;
- (void)populateGridArrangementCells:(vector_f8404f95 *)arg1;
- (void)_setupViewRangesIfNeeded;
- (int)_verticalAlignmentOfView:(id)arg1 inColumn:(int)arg2;
- (int)_horizontalAlignmentOfView:(id)arg1 inColumn:(int)arg2;
- (float)_heightOfRowAtIndex:(int)arg1;
- (float)_widthOfColumnAtIndex:(int)arg1;
- (void)didRemoveArrangedSubview:(id)arg1 atIndex:(int)arg2;
- (void)didInsertArrangedSubview:(id)arg1 atIndex:(int)arg2;
- (_Bool)invalidateIntrinsicContentSizeRequiringArrangedSubviewRemeasurement:(_Bool)arg1;
- (id)arrangedDescription;
- (void)layoutArrangedSubviewsInBounds:(struct CGRect)arg1;
- (struct CGSize)calculateArrangedSizeFittingSize:(struct CGSize)arg1;
- (struct CGSize)_calculateArrangedSizeFittingSize:(struct CGSize)arg1 forLayout:(_Bool)arg2;
- (id)viewForLastBaselineLayoutInRow:(int)arg1;
- (id)viewForFirstBaselineLayoutInRow:(int)arg1;
- (id)_baselineViewForFirstBaseline:(_Bool)arg1 forRow:(unsigned int)arg2;
- (id)viewForLastBaselineLayout;
- (id)viewForFirstBaselineLayout;
- (id)_baselineViewVendForFirstBaseline:(_Bool)arg1 fromViews:(id)arg2;
@property(nonatomic) float columnSpacing;
@property(nonatomic) float rowSpacing;
@property(nonatomic) int verticalDistribution;
@property(nonatomic) int horizontalDistribution;
- (void)replaceArrangedSubview:(id)arg1 inColumnAtIndex:(int)arg2 rowAtIndex:(int)arg3;
- (void)removeColumnAtIndex:(int)arg1;
- (void)insertColumnAtIndex:(int)arg1 withArrangedSubviews:(id)arg2;
- (void)addColumnWithArrangedSubviews:(id)arg1;
- (void)removeRowAtIndex:(int)arg1;
- (void)insertRowAtIndex:(int)arg1 withArrangedSubviews:(id)arg2;
- (void)addRowWithArrangedSubviews:(id)arg1;
- (int)columnIndexForArrangedSubview:(id)arg1;
- (int)rowIndexForArrangedSubview:(id)arg1;
- (void)getColumnRange:(struct _NSRange *)arg1 rowRange:(struct _NSRange *)arg2 forArrangedSubview:(id)arg3;
- (id)arrangedSubviewInColumnAtIndex:(int)arg1 rowAtIndex:(int)arg2;
- (id)arrangedSubviewsInColumnAtIndex:(int)arg1;
- (id)arrangedSubviewsInRowAtIndex:(int)arg1;
@property(readonly, nonatomic) int numberOfColumns;
@property(readonly, nonatomic) int numberOfRows;
- (void)_invalidateIntrinsicContentSizeAndUpdateArrangedSubviewsToMatchCurrentGrid;
- (void)_updateArrangedSubviewsToMatchCurrentGrid;
- (_Bool)_verifyInternalGridConsistencyWarningOnly:(_Bool)arg1;
- (void)dealloc;
- (id)initWithArrangedSubviewRows:(id)arg1;
- (id)initWithArrangeSubviewRows:(id)arg1;
- (id)initWithArrangedSubviews:(id)arg1;
- (void)setBaselineRelativeArrangement:(_Bool)arg1;
@property(nonatomic) __weak id <NUIContainerGridViewDelegate> delegate; // @dynamic delegate;
- (float)widthOfColumnAtIndex:(int)arg1;
- (void)setWidth:(float)arg1 ofColumnAtIndex:(int)arg2;
- (float)heightOfRowAtIndex:(int)arg1;
- (void)setHeight:(float)arg1 ofRowAtIndex:(int)arg2;
- (float)spacingAfterColumnAtIndex:(int)arg1;
- (void)setSpacing:(float)arg1 afterColumnAtIndex:(int)arg2;
- (float)spacingAfterRowAtIndex:(int)arg1;
- (void)setSpacing:(float)arg1 afterRowAtIndex:(int)arg2;
- (int)verticalAlignmentOfColumnAtIndex:(unsigned int)arg1;
- (void)setVerticalAlignment:(int)arg1 ofColumnAtIndex:(int)arg2;
- (int)horizontalAlignmentOfColumnAtIndex:(unsigned int)arg1;
- (void)setHorizontalAlignment:(int)arg1 ofColumnAtIndex:(int)arg2;
- (_Bool)isColumnAtIndexHidden:(int)arg1;
- (void)setColumnAtIndex:(int)arg1 hidden:(_Bool)arg2;
- (_Bool)isRowAtIndexHidden:(int)arg1;
- (void)setRowAtIndex:(int)arg1 hidden:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

