//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoAudioControl/NACIDSClientDelegate-Protocol.h>
#import <NanoAudioControl/NACXPCInterface-Protocol.h>
#import <NanoAudioControl/NSXPCListenerDelegate-Protocol.h>

@class NACIDSClient, NPSDomainAccessor, NSMutableDictionary, NSString, NSXPCListener, TLAlert;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface NACXPCServer : NSObject <NSXPCListenerDelegate, NACXPCInterface, NACIDSClientDelegate>
{
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_queue> *_audioAndHapticPreviewQueue;
    NPSDomainAccessor *_domainAccessor;
    NSMutableDictionary *_volumeRecords;
    NSMutableDictionary *_audioRoutesRecords;
    NSXPCListener *_xpcListener;
    NACIDSClient *_idsClient;
    float _hapticIntensity;
    _Bool _prominentHapticEnabled;
    int _hapticState;
    _Bool _systemMutedState;
    NSObject<OS_dispatch_source> *_audioRouteDeferTimer;
    TLAlert *_alert;
    _Bool _audioAndHapticPreviewIsPlaying;
    _Bool _prominentHapticPreviewIsPlaying;
}

+ (id)server;
- (void).cxx_destruct;
- (id)_routeObservationCategoriesForConnection:(id)arg1;
- (id)_audioRoutesRecordForCategory:(id)arg1;
- (id)_volumeRecordForTarget:(id)arg1;
- (void)_cleanupConnection:(id)arg1;
- (void)_persistHapticState;
- (int)_cachedHapticState;
- (void)_persistProminentHapticState;
- (_Bool)_cachedProminentHapticState;
- (void)_persistSystemMutedState;
- (_Bool)_cachedSystemMutedState;
- (void)_persistHapticIntensity;
- (float)_cachedHapticIntensity;
- (void)_persistVolumeRecords;
- (id)_cachedVolumeRecords;
- (void)client:(id)arg1 routeObservationCancelledForCategory:(id)arg2;
- (void)client:(id)arg1 volumeObservationCancelledForTarget:(id)arg2;
- (void)_cancelDeferredAudioRoutesUpdate;
- (void)_updateAudioRoutes:(id)arg1 category:(id)arg2;
- (void)_scheduleDeferredAudioRoutesUpdate:(id)arg1 category:(id)arg2;
- (void)client:(id)arg1 audioRoutes:(id)arg2 didChangeForCategory:(id)arg3;
- (void)client:(id)arg1 volumeWarningEnabled:(_Bool)arg2 didChangeForTarget:(id)arg3;
- (void)client:(id)arg1 EULimit:(float)arg2 didChangeForTarget:(id)arg3;
- (void)client:(id)arg1 systemMutedStateDidChange:(_Bool)arg2;
- (void)client:(id)arg1 hapticStateDidChange:(int)arg2;
- (void)client:(id)arg1 prominentHapticStateDidChange:(_Bool)arg2;
- (void)client:(id)arg1 hapticIntensityDidChange:(float)arg2;
- (void)client:(id)arg1 mutedState:(_Bool)arg2 didChangeForTarget:(id)arg3;
- (void)client:(id)arg1 volumeControlAvailable:(_Bool)arg2 didChangeForTarget:(id)arg3;
- (void)client:(id)arg1 volumeValue:(float)arg2 didChangeForTarget:(id)arg3;
- (void)pickAudioRouteWithIdentifier:(id)arg1 category:(id)arg2;
- (void)_endObservingAudioRoutesForCategory:(id)arg1 connection:(id)arg2;
- (void)endObservingAudioRoutesForCategory:(id)arg1;
- (void)beginObservingAudioRoutesForCategory:(id)arg1;
- (void)audioRoutesForCategory:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)playProminentHapticPreview;
- (void)playAudioAndHapticPreview;
- (void)setHapticState:(int)arg1;
- (void)setProminentHapticEnabled:(_Bool)arg1;
- (void)setHapticIntensity:(float)arg1;
- (void)systemMutedState:(CDUnknownBlockType)arg1;
- (void)hapticState:(CDUnknownBlockType)arg1;
- (void)prominentHapticEnabled:(CDUnknownBlockType)arg1;
- (void)hapticIntensity:(CDUnknownBlockType)arg1;
- (void)setSystemMuted:(_Bool)arg1;
- (void)setMuted:(_Bool)arg1 target:(id)arg2;
- (void)setVolumeValue:(float)arg1 target:(id)arg2;
- (void)volumeWarningForTarget:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)EULimitForTarget:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)mutedStateForTarget:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)volumeControlAvailabilityForTarget:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)volumeValueForTarget:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)_endObservingVolumeForTarget:(id)arg1 connection:(id)arg2;
- (void)endObservingVolumeForTarget:(id)arg1;
- (int)_aggregatedCountOfObserversForTarget:(id)arg1;
- (void)_beginObservingVolumeForTarget:(id)arg1 connection:(id)arg2;
- (void)beginObservingVolumeForTarget:(id)arg1;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)audioAndHapticPreviewHasCompletedPlaying;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

