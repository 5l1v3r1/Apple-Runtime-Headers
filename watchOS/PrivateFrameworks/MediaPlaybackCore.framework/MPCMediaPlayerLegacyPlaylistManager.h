//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MPAVPlaylistManager.h"

#import "MPCQueueBehaviorManaging.h"

@class MPAVItem, MPMusicPlayerControllerQueue, MPMutableBidirectionalDictionary, MPQueueFeeder, NSMapTable, NSMutableArray, NSMutableIndexSet, NSObject<OS_dispatch_queue>, NSString, _MPCAVItemSourceContext, _MPCAVPlaylistIteration;

@interface MPCMediaPlayerLegacyPlaylistManager : MPAVPlaylistManager <MPCQueueBehaviorManaging>
{
    _Bool _ignoreNextIndexChanges;
    _Bool _disableSoftQueueFaulting;
    _Bool _ignoreSoftQueueInvalidation;
    _Bool _ignoreHardQueueInvalidation;
    unsigned int _maximumModifiedPlaylistIterationIndex;
    unsigned int _minimumPlaylistIndex;
    unsigned int _maximumPlaylistIndex;
    NSMutableIndexSet *_failedSoftQueueIndexes;
    MPMutableBidirectionalDictionary *_identifiersToIndexes;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSObject<OS_dispatch_queue> *_musicPlayerControllerAccessQueue;
    MPMusicPlayerControllerQueue *_currentMusicPlayerControllerQueue;
    NSMapTable *_queueFeederLookup;
    _Bool _disableQueueModifications;
    MPQueueFeeder *_softQueueFeeder;
    NSMutableArray *_hardQueueSourceContexts;
    MPAVItem *_lastPlayedSoftQueueItem;
    int _nextCurrentIndex;
    int _hardQueueInsertionIndex;
    _MPCAVItemSourceContext *_repeatPlaylistIdentifer;
    _MPCAVPlaylistIteration *_softQueueModifications;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool disableQueueModifications; // @synthesize disableQueueModifications=_disableQueueModifications;
@property(retain, nonatomic) _MPCAVPlaylistIteration *softQueueModifications; // @synthesize softQueueModifications=_softQueueModifications;
@property(copy, nonatomic) _MPCAVItemSourceContext *repeatPlaylistIdentifer; // @synthesize repeatPlaylistIdentifer=_repeatPlaylistIdentifer;
@property(nonatomic) int hardQueueInsertionIndex; // @synthesize hardQueueInsertionIndex=_hardQueueInsertionIndex;
@property(nonatomic) int nextCurrentIndex; // @synthesize nextCurrentIndex=_nextCurrentIndex;
@property(retain, nonatomic) MPAVItem *lastPlayedSoftQueueItem; // @synthesize lastPlayedSoftQueueItem=_lastPlayedSoftQueueItem;
@property(retain, nonatomic) NSMutableArray *hardQueueSourceContexts; // @synthesize hardQueueSourceContexts=_hardQueueSourceContexts;
@property(retain, nonatomic) MPQueueFeeder *softQueueFeeder; // @synthesize softQueueFeeder=_softQueueFeeder;
- (void).cxx_destruct;
- (id)identifierAtIndex:(unsigned int)arg1 queueFeeder:(id)arg2;
- (unsigned int)indexOfItemWithIdentifier:(id)arg1 queueFeeder:(id)arg2;
- (id)_softQueueSourceContextForIndex:(int)arg1;
- (struct _NSRange)_softQueuePlaylistIndexRangeIncludingCurrentItem:(_Bool)arg1;
- (int)_softQueueIndexForIndex:(int)arg1;
- (id)_sourceContextForPlaylistIndex:(unsigned int)arg1;
- (id)_removeSoftQueueSourceContextAtIndex:(int)arg1;
- (_Bool)_removeHardQueueItems;
- (void)_removeSourceContextAtIndex:(unsigned int)arg1;
- (id)_queueFeeder:(id)arg1 itemForIdentifier:(id)arg2;
- (id)_playlistIterationForQueueFeeder:(id)arg1 withMaxQueueIndexToPreload:(unsigned int)arg2;
- (int)_playlistIndexOfItemIdentifier:(id)arg1;
- (id)_metadataItemForSourceContext:(id)arg1;
- (id)_itemForSourceContext:(id)arg1;
- (id)_itemForPlaylistIndex:(int)arg1;
- (_Bool)_itemIsSoftQueueItem:(id)arg1;
- (_Bool)_itemIsHardQueueItem:(id)arg1;
- (void)_insertSoftQueueSourceContext:(id)arg1 atIndex:(int)arg2;
- (struct _NSRange)_hardQueuePlaylistIndexRangeIncludingCurrentItem:(_Bool)arg1;
- (int)_hardQueueIndexForIndex:(int)arg1;
- (void)_handleConfiguredQueueFeeder:(id)arg1 fromPlaybackContext:(id)arg2;
- (void)_invalidateCachedMusicPlayerControllerQueue;
- (void)_updateMusicPlayerControllerQueueWithCompletionHandler:(CDUnknownBlockType)arg1;
- (unsigned int)_indexOfMediaItem:(id)arg1;
- (_Bool)setMusicPlayerControllerQueue:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)requestMusicPlayerControllerQueueWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)musicPlayerControllerQueueForUUID:(id)arg1;
- (id)currentQueueUUID;
@property(readonly, nonatomic) _Bool userCanChangeShuffleAndRepeatType;
- (_Bool)supportsAddToQueue;
- (_Bool)preventsHardQueueModificationsForItem:(id)arg1;
- (_Bool)canSkipToPreviousItemForItem:(id)arg1;
- (id)queueCoordinator:(id)arg1 itemToFollowItem:(id)arg2;
- (void)_willFinishReloadWithQueueFeeder:(id)arg1 fromPlaybackContext:(id)arg2;
- (_Bool)allowsQueueResetWhenReachingEnd;
- (void)queueFeederDidInvalidateRealShuffleType:(id)arg1;
- (void)queueFeeder:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2;
- (void)queueFeeder:(id)arg1 didChangeContentsWithPreferredStartIndex:(unsigned int)arg2 error:(id)arg3;
- (int)playlistItemCount;
- (int)playlistIndexWithDelta:(int)arg1 fromIndex:(int)arg2 ignoreElapsedTime:(_Bool)arg3 didReachEnd:(_Bool *)arg4;
- (void)setRepeatMode:(int)arg1;
- (_Bool)setPlaylistFeeder:(id)arg1 startIndex:(int)arg2 keepPlaying:(_Bool)arg3;
- (void)setCurrentIndex:(int)arg1 selectionDirection:(int)arg2;
- (int)_prepareToQueuePlaybackIndex:(int)arg1 selectionDirection:(int)arg2;
- (int)playlistIndexOfQueueIdentifier:(id)arg1 inPlaylistFeeder:(id)arg2;
- (int)playlistIndexOfIndex:(int)arg1 inPlaylistFeeder:(id)arg2;
- (int)playlistIndexOfItemIdentifier:(id)arg1;
- (int)playlistIndexOfItem:(id)arg1;
- (id)playlistFeederForPlaylistIndex:(int)arg1;
- (id)playlistFeeder;
- (void)player:(id)arg1 currentItemDidChangeFromItem:(id)arg2 toItem:(id)arg3;
- (void)_notifyQueueFeederContentsChanged;
- (id)metadataItemForPlaylistIndex:(int)arg1;
- (unsigned int)indexForContentItemID:(id)arg1;
- (id)contentItemIDForPlaylistIndex:(int)arg1;
- (void)updateLocationDependentPropertiesForItem:(id)arg1;
- (_Bool)isPlaceholderItemForContentItemID:(id)arg1;
- (id)itemForContentItemID:(id)arg1;
- (id)itemForPlaylistIndex:(int)arg1;
- (int)upNextItemCount;
- (void)handlePlaybackFailureForItem:(id)arg1;
- (unsigned int)displayCountForItem:(id)arg1;
- (unsigned int)displayIndexForItem:(id)arg1;
- (int)currentIndex;
@property(readonly, nonatomic) struct _NSRange softQueuePlaylistIndexRange;
- (void)removeItemAtPlaybackIndex:(int)arg1;
- (void)moveItemAtPlaybackIndex:(int)arg1 toPlaybackIndex:(int)arg2 intoHardQueue:(_Bool)arg3;
@property(readonly, nonatomic) struct _NSRange hardQueuePlaylistIndexRange;
- (void)clearSoftQueue;
- (void)clearHardQueue;
- (void)addPlaybackContext:(id)arg1 toQueueWithInsertionType:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)uniqueIdentifier;
- (void)encodeWithCoder:(id)arg1;
- (void)_commonInit;
- (void)finalizeStateRestorationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool allowsUserVisibleUpcomingItems;
@property(readonly, nonatomic) _Bool canSeek;
@property(readonly, nonatomic) _Bool canSkipToPreviousItem;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly, nonatomic) int playbackMode;
@property(readonly) Class superclass;

@end

