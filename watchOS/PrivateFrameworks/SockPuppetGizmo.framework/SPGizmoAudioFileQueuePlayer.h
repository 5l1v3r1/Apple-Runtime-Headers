//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVQueuePlayer, NSString, SPGizmoAudioFilePlayerAssetManager, SPGizmoAudioFilePlayerItemManager, SPGizmoKeyValueObserverHelper, SPLongFormAudioServer;

@interface SPGizmoAudioFileQueuePlayer : NSObject
{
    NSString *_identifier;
    AVQueuePlayer *_queuePlayer;
    SPLongFormAudioServer *_audioServer;
    SPGizmoKeyValueObserverHelper *_statusObserver;
    SPGizmoKeyValueObserverHelper *_rateObserver;
    SPGizmoKeyValueObserverHelper *_currentItemObserver;
    SPGizmoAudioFilePlayerItemManager *_playerItemManager;
    SPGizmoAudioFilePlayerAssetManager *_assetManager;
}

@property(retain, nonatomic) SPGizmoAudioFilePlayerAssetManager *assetManager; // @synthesize assetManager=_assetManager;
@property(retain, nonatomic) SPGizmoAudioFilePlayerItemManager *playerItemManager; // @synthesize playerItemManager=_playerItemManager;
@property(retain, nonatomic) SPGizmoKeyValueObserverHelper *currentItemObserver; // @synthesize currentItemObserver=_currentItemObserver;
@property(retain, nonatomic) SPGizmoKeyValueObserverHelper *rateObserver; // @synthesize rateObserver=_rateObserver;
@property(retain, nonatomic) SPGizmoKeyValueObserverHelper *statusObserver; // @synthesize statusObserver=_statusObserver;
@property(retain, nonatomic) SPLongFormAudioServer *audioServer; // @synthesize audioServer=_audioServer;
@property(retain, nonatomic) AVQueuePlayer *queuePlayer; // @synthesize queuePlayer=_queuePlayer;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)_updateMediaRemoteNowPlayingInfoForCurrentItem;
- (void)_updateMediaRemoteSupportedCommandsForCurrentItem;
- (void)_updateMediaRemoteForCurrentItem;
- (int)_handlePreviousTrackCommand:(id)arg1;
- (int)_handleNextTrackCommand:(id)arg1;
- (int)_handleTogglePlayPauseCommand:(id)arg1;
- (int)_handlePlayCommand:(id)arg1;
- (int)_handlePauseCommand:(id)arg1;
- (void)_registerMediaRemoteSupportedCommands;
- (void)_pauseIfUnableToPlay;
- (_Bool)setRate:(float)arg1;
- (_Bool)togglePlayPause;
- (_Bool)isPlaying;
- (_Bool)pause;
- (_Bool)play;
- (void)dealloc;
- (id)initWithQueuePlayer:(id)arg1 identifier:(id)arg2 audioServer:(id)arg3 playerItemManager:(id)arg4 assetManager:(id)arg5;

@end

