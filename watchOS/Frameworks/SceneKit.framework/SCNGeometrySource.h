//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSSecureCoding.h"

@class NSData, NSString;

@interface SCNGeometrySource : NSObject <NSSecureCoding>
{
    // Error parsing type: ^{__C3DMeshSource={__C3DGenericSource={__C3DEntity={__CFRuntimeBase=IAI}^v^{__CFString}^{__CFString}^{__CFDictionary}^{__C3DScene}i}^{__C3DSourceAccessor}(?=^{__CFData}^v^v)ib1b1b1}SCC}, name: _meshSource
    NSData *_data;
    NSString *_semantic;
    int _vectorCount;
    short _componentType;
    unsigned short _componentCount;
    int _dataOffset;
    int _dataStride;
    unsigned char _mkSemantic;
}

+ (_Bool)supportsSecureCoding;
+ (id)geometrySourceWithColorComponents:(const float *)arg1 count:(int)arg2 hasAlpha:(_Bool)arg3 colorSpace:(struct CGColorSpace *)arg4;
+ (id)geometrySourceWithTextureCoordinates:(const struct CGPoint *)arg1 count:(int)arg2;
+ (id)geometrySourceWithNormals:(const struct SCNVector3 *)arg1 count:(int)arg2;
+ (id)geometrySourceWithVertices:(const struct SCNVector3 *)arg1 count:(int)arg2;
+ (id)_geometrySourceWithData:(id)arg1 semantic:(id)arg2 vectorCount:(int)arg3 componentType:(short)arg4 componentCount:(unsigned int)arg5 dataOffset:(int)arg6 dataStride:(int)arg7;
+ (id)geometrySourceWithData:(id)arg1 semantic:(id)arg2 vectorCount:(int)arg3 floatComponents:(_Bool)arg4 componentsPerVector:(int)arg5 bytesPerComponent:(int)arg6 dataOffset:(int)arg7 dataStride:(int)arg8;
+ (id)dataWithPointArray:(const struct CGPoint *)arg1 count:(int)arg2 bytesPerComponent:(int *)arg3;
+ (id)dataWithVector3Array:(const struct SCNVector3 *)arg1 count:(int)arg2 bytesPerComponent:(int *)arg3;
+ (id)dataByConvertingDoublesToFloats:(const double *)arg1 count:(int)arg2;
+     // Error parsing type: @12@0:4^{__C3DMeshSource={__C3DGenericSource={__C3DEntity={__CFRuntimeBase=IAI}^v^{__CFString}^{__CFString}^{__CFDictionary}^{__C3DScene}i}^{__C3DSourceAccessor}(?=^{__CFData}^v^v)ib1b1b1}SCC}8, name: geometrySourceWithMeshSourceRef:
+ (id)geometrySourceWithMDLVertexAttribute:(id)arg1 mesh:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
-     // Error parsing type: r^{__C3DMeshSource={__C3DGenericSource={__C3DEntity={__CFRuntimeBase=IAI}^v^{__CFString}^{__CFString}^{__CFDictionary}^{__C3DScene}i}^{__C3DSourceAccessor}(?=^{__CFData}^v^v)ib1b1b1}SCC}8@0:4, name: meshSource
- (const void *)__CFObject;
- (id)scene;
- (struct __C3DScene *)sceneRef;
- (void)_clearC3DCache;
- (short)_componentType;
@property(readonly, nonatomic) int dataStride;
@property(readonly, nonatomic) int dataOffset;
@property(readonly, nonatomic) int bytesPerComponent;
@property(readonly, nonatomic) int componentsPerVector;
@property(readonly, nonatomic) _Bool floatComponents;
@property(readonly, nonatomic) int vectorCount;
@property(readonly, nonatomic) NSString *semantic;
- (void)_printData;
@property(readonly, nonatomic) NSData *data;
- (void)setMkSemantic:(id)arg1;
- (id)mkSemantic;
- (id)initWithData:(id)arg1 semantic:(id)arg2 vectorCount:(int)arg3 componentType:(short)arg4 componentCount:(unsigned int)arg5 dataOffset:(int)arg6 dataStride:(int)arg7;
- (id)initWithData:(id)arg1 semantic:(id)arg2 vectorCount:(int)arg3 floatComponents:(_Bool)arg4 componentsPerVector:(int)arg5 bytesPerComponent:(int)arg6 dataOffset:(int)arg7 dataStride:(int)arg8;
- (id)description;
- (void)dealloc;
- (id)init;
-     // Error parsing type: @12@0:4^{__C3DMeshSource={__C3DGenericSource={__C3DEntity={__CFRuntimeBase=IAI}^v^{__CFString}^{__CFString}^{__CFDictionary}^{__C3DScene}i}^{__C3DSourceAccessor}(?=^{__CFData}^v^v)ib1b1b1}SCC}8, name: initWithMeshSource:

@end

