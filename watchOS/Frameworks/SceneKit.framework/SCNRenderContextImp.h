//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SCNRenderContext.h"

@class NSDictionary, NSString, SCNRenderTargetRegistry;

__attribute__((visibility("hidden")))
@interface SCNRenderContextImp : NSObject <SCNRenderContext>
{
    struct C3DColor4 _rendererPremultipliedBackgroundColor;
    int _currentFrameIndex;
    struct __C3DEngineStats *__engineStats;
    SCNRenderTargetRegistry *_renderTargetRegistry;
    float _superSamplingFactor;
    struct SCNMatrix4 _screenTransform;
    _Bool _needSuperSampling;
    _Bool enablesDeferredShading;
    _Bool collectsCompilationErrors;
    _Bool wantsWideGamut;
    _Bool disableLinearRendering;
    _Bool isOpaque;
    float contentScaleFactor;
    int pendingGPUFrameCount;
    int sampleCount;
    unsigned int debugOptions;
}

@property(nonatomic) unsigned int debugOptions; // @synthesize debugOptions;
@property(readonly, nonatomic) SCNRenderTargetRegistry *renderTargetRegistry; // @synthesize renderTargetRegistry=_renderTargetRegistry;
@property(nonatomic) _Bool isOpaque; // @synthesize isOpaque;
@property(nonatomic) _Bool disableLinearRendering; // @synthesize disableLinearRendering;
@property(nonatomic) _Bool wantsWideGamut; // @synthesize wantsWideGamut;
@property(nonatomic) int sampleCount; // @synthesize sampleCount;
@property(nonatomic) _Bool collectsCompilationErrors; // @synthesize collectsCompilationErrors;
@property(nonatomic) _Bool enablesDeferredShading; // @synthesize enablesDeferredShading;
@property(readonly, nonatomic) int pendingGPUFrameCount; // @synthesize pendingGPUFrameCount;
@property(nonatomic) float contentScaleFactor; // @synthesize contentScaleFactor;
@property(readonly, nonatomic) NSDictionary *compilationErrors;
- (void)drawWireframeOverlayForElements:(CDStruct_d65e47c4 *)arg1 range:(CDStruct_1ef3fb1f)arg2 store:(struct __C3DRendererElementStore *)arg3;
- (void)endDeferredLighting;
-     // Error parsing type: v20@0:4^{__C3DNode=}8l12^{__C3DLightRuntimeData=If[4{?=[4]}]^v^{__C3DTextureSampler}^v^{__C3DTextureSampler}}16, name: renderLight:lightType:lightData:
- (void)beginDeferredLighting;
- (void)unmapVolatileMeshElement:(struct __C3DMeshElement *)arg1;
- (struct __C3DMeshElement *)createVolatileMeshElementOfType:(BOOL)arg1 primitiveCount:(int)arg2 bytesPerIndex:(int)arg3;
- (void)unmapVolatileMesh:(struct __C3DMesh *)arg1 modifiedVerticesCount:(int)arg2;
- (_Bool)mapVolatileMesh:(struct __C3DMesh *)arg1 verticesCount:(int)arg2;
- (void)renderVideoBackground:(struct __C3DImageProxy *)arg1 engineContext:(struct __C3DEngineContext *)arg2;
-     // Error parsing type: v16@0:4^{__C3DEffectSlot={__CFRuntimeBase=IAI}{C3DColor4=(?=[4f]{?=ffff})}^v(?=^{__C3DImage}^v^{__C3DImageProxy}^{__C3DTexture})b8b1b1b1b4c^{__C3DTextureSampler}^(C3DMatrix4x4)fi^v}8^{__C3DEngineContext=}12, name: renderBackground:engineContext:
-     // Error parsing type: v12@0:4^{__C3DFXPass={__CFRuntimeBase=IAI}^{__CFString}liB^{__C3DFXTechnique}^{__CFString}^{__CFString}^{__CFString}^{__CFString}B^{__C3DFXProgram}^{__C3DMaterial}^{__C3DBlendStates}^{__C3DRasterizerStates}{C3DColor4=(?=[4f]{?=ffff})}CIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^{__C3DRendererElement}LL{?=^?^?^?^?^?^?^?^?^v}{?=[4{?=CCCb1b1b1b1b1}]{?=CCCb1b1b1b1b1}b3b1b1}{CGPoint=ff}^{?}I^{__C3DNode}^{__C3DNode}^{__CFArray}^{__C3DNode}^{__CFString}^{__CFString}^{__CFString}^^{__C3DFXPassInput}ii^{__CFDictionary}^{__CFDictionary}}8, name: drawFullScreenQuadForPass:
-     // Error parsing type: v108@0:4^{__C3DMesh=}8^{__C3DMeshElement=}12^{__C3DFXProgram={__C3DEntity={__CFRuntimeBase=IAI}^v^{__CFString}^{__CFString}^{__CFDictionary}^{__C3DScene}i}lb1b1^{__C3DFXProgramDelegate}}16^{__C3DEngineContext=}20(C3DMatrix4x4=[16f][4]{?=[4]})24r^{C3DColor4=(?=[4f]{?=ffff})}88^{__C3DRasterizerStates=}92^{__C3DBlendStates=}96^{__C3DImage=}100B104, name: renderMesh:meshElement:withProgram:engineContext:transform:color:rasterizerStates:blendState:texture:depthBias:
-     // Error parsing type: v16@0:4^{__C3DRendererElement=}8^{__C3DFXPass={__CFRuntimeBase=IAI}^{__CFString}liB^{__C3DFXTechnique}^{__CFString}^{__CFString}^{__CFString}^{__CFString}B^{__C3DFXProgram}^{__C3DMaterial}^{__C3DBlendStates}^{__C3DRasterizerStates}{C3DColor4=(?=[4f]{?=ffff})}CIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^{__C3DRendererElement}LL{?=^?^?^?^?^?^?^?^?^v}{?=[4{?=CCCb1b1b1b1b1}]{?=CCCb1b1b1b1b1}b3b1b1}{CGPoint=ff}^{?}I^{__C3DNode}^{__C3DNode}^{__CFArray}^{__C3DNode}^{__CFString}^{__CFString}^{__CFString}^^{__C3DFXPassInput}ii^{__CFDictionary}^{__CFDictionary}}12, name: drawRenderElement:withPass:
- (void)processRendererElement:(struct __C3DRendererElement *)arg1 engineIterationContext:(CDStruct_4ac9c3fe *)arg2;
- (void)stopProcessingRendererElements;
- (void)processRendererElements:(CDStruct_d65e47c4 *)arg1 count:(unsigned int)arg2 engineIterationContext:(CDStruct_4ac9c3fe *)arg3;
- (void)startProcessingRendererElementsWithEngineIterationContext:(CDStruct_4ac9c3fe *)arg1;
- (id)newRenderTargetWithDescription:(CDStruct_dcfba391 *)arg1 size:(unsigned int)arg2 arrayLength: /* Error: Ran out of types for this method. */;
- (void)popDebugGroup;
- (void)pushDebugGroup:(id)arg1;
-     // Error parsing type: @12@0:4^{__C3DEffectSlot={__CFRuntimeBase=IAI}{C3DColor4=(?=[4f]{?=ffff})}^v(?=^{__C3DImage}^v^{__C3DImageProxy}^{__C3DTexture})b8b1b1b1b4c^{__C3DTextureSampler}^(C3DMatrix4x4)fi^v}8, name: textureForEffectSlot:
@property(nonatomic) _Bool showsAuthoringEnvironment;
@property(readonly, nonatomic) id <SCNResourceManager> resourceManager;
- (struct __C3DEngineStats *)stats;
@property(readonly, nonatomic) int currentFrameIndex;
- (void)setRendererPremultipliedBackgroundColor:(struct C3DColor4)arg1;
- (void)endRenderPass;
-     // Error parsing type: B15@0:4^{__C3DFXPass={__CFRuntimeBase=IAI}^{__CFString}liB^{__C3DFXTechnique}^{__CFString}^{__CFString}^{__CFString}^{__CFString}B^{__C3DFXProgram}^{__C3DMaterial}^{__C3DBlendStates}^{__C3DRasterizerStates}{C3DColor4=(?=[4f]{?=ffff})}CIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1^{__C3DRendererElement}LL{?=^?^?^?^?^?^?^?^?^v}{?=[4{?=CCCb1b1b1b1b1}]{?=CCCb1b1b1b1b1}b3b1b1}{CGPoint=ff}^{?}I^{__C3DNode}^{__C3DNode}^{__CFArray}^{__C3DNode}^{__CFString}^{__CFString}^{__CFString}^^{__C3DFXPassInput}ii^{__CFDictionary}^{__CFDictionary}}8{?=CCB}12, name: beginRenderPass:parameters:
- (void)endFrameWaitingUntilCompleted:(_Bool)arg1;
- (void)beginFrame:(id)arg1;
- (_Bool)supportsFeatureSet:(unsigned long long)arg1;
@property(readonly, nonatomic) long profile;
@property(readonly, nonatomic) unsigned long features;
@property(nonatomic) struct SCNMatrix4 screenTransform;
@property(nonatomic) float superSamplingFactor;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

