//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <SceneKit/JSExport-Protocol.h>

@class CAAnimation, MDLCamera, NSArray, NSString, SCNMaterialProperty;

@protocol SCNCameraJSExport <JSExport>
+ (id)cameraWithMDLCamera:(MDLCamera *)arg1;
+ (id)camera;
@property(nonatomic) float focalDistance;
@property(nonatomic) float focalSize;
@property(nonatomic) float aperture;
@property(nonatomic) double yFov;
@property(nonatomic) double xFov;
@property(nonatomic) unsigned int categoryBitMask;
@property(readonly, nonatomic) SCNMaterialProperty *colorGrading;
@property(nonatomic) float whiteBalanceTint;
@property(nonatomic) float whiteBalanceTemperature;
@property(nonatomic) float grainIsColored;
@property(nonatomic) float grainScale;
@property(nonatomic) float grainIntensity;
@property(nonatomic) float contrast;
@property(nonatomic) float saturation;
@property(nonatomic) float colorFringeIntensity;
@property(nonatomic) float colorFringeStrength;
@property(nonatomic) float vignettingIntensity;
@property(nonatomic) float vignettingPower;
@property(nonatomic) float bloomBlurRadius;
@property(nonatomic) float bloomIntensity;
@property(nonatomic) unsigned int bloomIterationSpread;
@property(nonatomic) unsigned int bloomIteration;
@property(nonatomic) float bloomThreshold;
@property(nonatomic) float maximumExposure;
@property(nonatomic) float minimumExposure;
@property(nonatomic) float exposureAdaptationDarkeningSpeedFactor;
@property(nonatomic) float exposureAdaptationBrighteningSpeedFactor;
@property(nonatomic) _Bool wantsExposureAdaptation;
@property(nonatomic) float whitePoint;
@property(nonatomic) float averageGray;
@property(nonatomic) float exposureOffset;
@property(nonatomic) _Bool wantsHDR;
@property(nonatomic) float screenSpaceAmbientOcclusionNormalThreshold;
@property(nonatomic) float screenSpaceAmbientOcclusionDepthThreshold;
@property(nonatomic) float screenSpaceAmbientOcclusionBias;
@property(nonatomic) float screenSpaceAmbientOcclusionRadius;
@property(nonatomic) float screenSpaceAmbientOcclusionIntensity;
@property(nonatomic) float motionBlurIntensity;
@property(nonatomic) int apertureBladeCount;
@property(nonatomic) float fStop;
@property(nonatomic) int focalBlurSampleCount;
@property(nonatomic) _Bool wantsDepthOfField;
@property(nonatomic) float focalBlurRadius;
@property(nonatomic) float focusDistance;
@property(nonatomic) double orthographicScale;
@property(nonatomic) _Bool usesOrthographicProjection;
@property(nonatomic) _Bool automaticallyAdjustsZRange;
@property(nonatomic) double zFar;
@property(nonatomic) double zNear;
@property(nonatomic) float sensorHeight;
@property(nonatomic) float focalLength;
@property(nonatomic) int projectionDirection;
@property(nonatomic) float fieldOfView;
@property(copy, nonatomic) NSString *name;
- (id)valueForKeyPath:(NSString *)arg1;
- (id)valueForKey:(NSString *)arg1;
- (void)setValue:(id)arg1 forKey:(NSString *)arg2;
- (void)setValue:(id)arg1 forKeyPath:(NSString *)arg2;
- (id)copy;
- (void)resumeAnimationForKey:(NSString *)arg1;
- (void)pauseAnimationForKey:(NSString *)arg1;
- (CAAnimation *)animationForKey:(NSString *)arg1;
- (NSArray *)animationKeys;
- (void)removeAnimationForKey:(NSString *)arg1;
- (void)removeAllAnimations;
- (void)addAnimation:(CAAnimation *)arg1 forKey:(NSString *)arg2;
@property(nonatomic) struct SCNMatrix4 projectionTransform;
@end

