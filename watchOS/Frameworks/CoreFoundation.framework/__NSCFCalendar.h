//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSCalendar.h>

__attribute__((visibility("hidden")))
@interface __NSCFCalendar : NSCalendar
{
}

+ (id)calendarWithIdentifier:(id)arg1;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)enumerateDatesStartingAfterDate:(id)arg1 matchingComponents:(id)arg2 options:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)__bumpSearchingDate:(id)arg1 upToNextHigherUnitInComponents:(id)arg2 goBackwards:(_Bool)arg3 usingMatchDate:(id)arg4;
- (id)__ensureThoroughEnumerationByAdjustingComponents:(id)arg1 usingSearchDate:(id)arg2 goBackwards:(_Bool)arg3;
- (_Bool)__findMatchingDate:(id *)arg1 matchingComponents:(id)arg2 inNextHighestUnitRange:(unsigned int)arg3 afterStartDate:(id)arg4 goBackwards:(_Bool)arg5 findLastMatch:(_Bool)arg6 options:(unsigned int)arg7;
- (_Bool)__verifyNSDateComponentsValues:(id)arg1;
- (unsigned int)__findLowestSetUnitInDateComponents:(id)arg1;
- (unsigned int)__findHighestSetUnitInDateComponents:(id)arg1;
- (_Bool)__findMatchingDate:(id *)arg1 afterStartDate:(id)arg2 matchingComponents:(id)arg3 goingBackwards:(_Bool)arg4 findLastMatch:(_Bool)arg5 options:(unsigned int)arg6;
- (_Bool)__checkDate:(id)arg1 containsMatchingComponents:(id)arg2 mismatchedUnits:(unsigned int *)arg3;
- (_Bool)__checkIfEra:(int)arg1 hasYearForWeekOfYear:(int)arg2 resultDate:(id *)arg3 resultInterval:(double *)arg4;
- (_Bool)__checkIfEra:(int)arg1 hasYear:(int)arg2 resultDate:(id *)arg3;
- (_Bool)nextWeekendStartDate:(out id *)arg1 interval:(out double *)arg2 options:(unsigned int)arg3 afterDate:(id)arg4;
- (_Bool)isDateInWeekend:(id)arg1;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned int)arg4;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned int)arg3;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2;
- (id)dateFromComponents:(id)arg1;
- (_Bool)rangeOfUnit:(unsigned int)arg1 startDate:(id *)arg2 interval:(double *)arg3 forDate:(id)arg4;
- (unsigned int)ordinalityOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)rangeOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)maximumRangeOfUnit:(unsigned int)arg1;
- (struct _NSRange)minimumRangeOfUnit:(unsigned int)arg1;
- (id)gregorianStartDate;
- (void)setGregorianStartDate:(id)arg1;
- (unsigned int)minimumDaysInFirstWeek;
- (void)setMinimumDaysInFirstWeek:(unsigned int)arg1;
- (unsigned int)firstWeekday;
- (void)setFirstWeekday:(unsigned int)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)calendarIdentifier;
- (id)initWithCalendarIdentifier:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)retainCount;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (_Bool)isEqual:(id)arg1;

@end

