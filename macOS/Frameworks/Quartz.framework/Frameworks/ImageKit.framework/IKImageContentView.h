//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

@class CAKeyframeAnimation, CALayer, CIContext, CIFilter, CIImage, IKCenteringClipView, IKImageRenderInfo, IKImageView2, IKImageViewLayerQueue, NSData, NSDictionary, NSMutableArray, NSTimer, NSURL;

__attribute__((visibility("hidden")))
@interface IKImageContentView : NSView
{
    BOOL _initialized;
    BOOL _loadsImageSynchronously;
    IKImageRenderInfo *_renderInfo;
    CIImage *_ciImage;
    CIImage *_scaledCIImage;
    CIImage *_flattenedCIImage;
    CIImage *_thumbnailCIImage;
    CIImage *_drawingCIImage;
    CIContext *_flatteningContext;
    BOOL _thumbnailNeedsToUpdateFilters;
    BOOL _drawingCIImageNeedsToUpdate;
    struct CGImage *_originalCGImage;
    struct CGImage *_cachedHigherResThumbnailImage;
    struct CGImage *_thumbnailCGImage;
    NSDictionary *_displayProperties;
    BOOL _needToReloadThumbnailForHigherResolution;
    BOOL _finishedFirstLowResThumbnail;
    double _imageWidth;
    double _imageHeight;
    double _zoomedWidth;
    double _zoomedHeight;
    double _zoomFactor;
    double _startingScreenScaleFactor;
    BOOL _stickyZoomToFit;
    BOOL _isAnimatingZoom;
    BOOL _isAnimating;
    double _minNearestNeighborScale;
    BOOL _alwaysHidesScrollers;
    struct CGPoint _startingViewCenter;
    NSMutableArray *_blockCollection;
    NSMutableArray *_lastEnqueuedBlockCollection;
    IKImageViewLayerQueue *_layerRenderingQueue;
    NSTimer *_blockCleanupTimer;
    BOOL _canInvalidateBlockCleanupTimer;
    struct CGRect _lastUpdatedBounds;
    struct CGRect _loadedRect;
    CALayer *_backgroundThumbnailLayer;
    CALayer *_backgroundThumbnailMask;
    NSView *_contentView;
    CALayer *_oldbgThumbnailLayer;
    CALayer *_contentViewContainerLayer;
    CALayer *_incomingContentViewContainerLayer;
    CALayer *_combinedCurrentTilesAndBGLayer;
    CALayer *_animationLayer;
    CALayer *_flipLayer;
    NSView *_annotationsView;
    CALayer *_annotationsLayer;
    BOOL _inMagnifyGesture;
    NSTimer *_zoomTimer;
    BOOL _completedInitialImageLoading;
    long long _exifOrientation;
    double _rotationAngle;
    BOOL _canAnimateImage;
    NSURL *_imgURL;
    NSData *_imgData;
    CAKeyframeAnimation *_gifAnimation;
    IKImageView2 *_imageView;
    IKCenteringClipView *_clipView;
    CIFilter *_softProofFilter;
    BOOL _shouldUseTiles;
    BOOL _scrollingLoadsTiles;
    unsigned long long _imageIndex;
    BOOL _ignoreWindowUpdates;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (int)_flipTypeForExif:(long long)arg1;
+ (double)rotationDegreeForExif:(long long)arg1;
+ (id)_clampImageAlphaTo01:(id)arg1 colorSpace:(struct CGColorSpace *)arg2;
@property BOOL ignoreWindowUpdates; // @synthesize ignoreWindowUpdates=_ignoreWindowUpdates;
@property(nonatomic) BOOL alwaysHidesScrollers; // @synthesize alwaysHidesScrollers=_alwaysHidesScrollers;
@property(retain) IKImageRenderInfo *renderInfo; // @synthesize renderInfo=_renderInfo;
@property unsigned long long imageIndex; // @synthesize imageIndex=_imageIndex;
@property BOOL scrollingLoadsTiles; // @synthesize scrollingLoadsTiles=_scrollingLoadsTiles;
@property BOOL loadsSynchronously; // @synthesize loadsSynchronously=_loadsImageSynchronously;
@property(nonatomic) double zoomFactor; // @synthesize zoomFactor=_zoomFactor;
- (void)_endOperation:(id)arg1;
- (void)_beginOperation:(id)arg1;
- (void)originalImageFileWillChangeOnDisk;
- (void)_updateUnderlyingCIImageWithScale:(double)arg1;
- (void)_updateUnderlyingCIImageToFullSizeIfNecessaryForZoomFactor:(double)arg1;
- (double)_imageScaleWithImageProperties:(id)arg1 andDisplayProperties:(id)arg2 usingLowResScaleFactorIfAvailable:(BOOL)arg3;
- (double)_zoomToFitScaleFactorIgnoringWindowSizeForImageWithSize:(struct CGSize)arg1;
- (double)_zoomToFitScaleFactorForImageWithSize:(struct CGSize)arg1;
- (double)_underlyingCIImageScale;
- (double)_scaleFactorForResettingScaledCIImage;
- (void)finishedDrawingLayer:(id)arg1;
- (void)updateContentForLayer:(id)arg1;
- (struct CGRect)_sourceRectToDrawForLayer:(id)arg1 andImage:(id)arg2;
- (id)_imageToDrawForLayer:(id)arg1;
- (id)_cachedCIContext;
- (id)newFlattenedImageForImage:(id)arg1;
- (void)_redrawExistingBlocks;
- (struct CGImage *)_newScaledCGImageFromCGImage:(struct CGImage *)arg1 atScale:(double)arg2 rotation:(double)arg3 flipped:(int)arg4;
- (struct CGRect)_extendRect:(struct CGRect)arg1 byRect:(struct CGRect)arg2;
- (struct CGRect)convertRectFromImage:(struct CGRect)arg1;
- (struct CGPoint)convertPointFromImage:(struct CGPoint)arg1;
- (struct CGRect)convertRectToImage:(struct CGRect)arg1;
- (struct CGPoint)convertPointToImage:(struct CGPoint)arg1;
- (struct CGSize)imageSizeWithoutRotations;
- (struct CGSize)imageSize;
- (struct CGRect)viewRectToScaledImageRect:(struct CGRect)arg1 withZoomFactor:(double)arg2;
- (struct CGRect)rectVisibleInClipView;
- (struct CGRect)visibleScaledImageRectForZoomFactor:(double)arg1;
- (struct CGRect)visibleScaledImageRect;
- (struct CGImage *)newVisibleImageSnapshot;
- (void)_backgroundDidFinishLoading;
- (void)_loadBackgroundThumbnail;
- (BOOL)_replacingOldThumbnail;
- (void)loadVisibleRect;
- (void)loadingCompleteForRect:(struct CGRect)arg1 withBlockCollection:(id)arg2 andThumbnailMask:(id)arg3;
- (void)loadBlocksInScaledSourceRect:(struct CGRect)arg1 usingBlockCollection:(id)arg2;
- (void)loadBlocksInScaledSourceRect:(struct CGRect)arg1;
- (struct CGRect)_zoomedImageRectForViewRect:(struct CGRect)arg1;
- (id)_newThumbnailMaskWithBlockWidth:(double)arg1 blockHeight:(double)arg2;
- (struct CGRect)convertRectToUpperLeftOrigin:(struct CGRect)arg1 inBoundingRect:(struct CGRect)arg2;
- (void)_clearImageBlocks:(id)arg1 fromCollection:(id)arg2;
- (void)clearUnseenImageBlocks;
- (struct CGRect)rectInThisViewForBlock:(id)arg1;
- (void)clearBlocksFromBlockCollection:(id)arg1 didCancelDisplay:(char *)arg2;
- (BOOL)_isUsingTiles;
@property BOOL shouldUseTiles;
- (void)setSoftProofFilter:(id)arg1;
- (id)softProofFilter;
- (void)setRotationAngle:(double)arg1 centeredAroundImagePoint:(struct CGPoint)arg2;
@property double rotationAngle;
- (void)setRotationAngleWithAnimation:(double)arg1 aroundImagePoint:(struct CGPoint)arg2 duration:(double)arg3;
- (void)setAnchorPointWithoutShift:(struct CGPoint)arg1 forLayer:(id)arg2;
- (void)_rotateContent:(double)arg1 aroundPoint:(struct CGPoint)arg2;
- (void)_shiftContentViewToViewCenter;
- (struct CGSize)_sizeOfRotatedRectOriginal:(struct CGSize)arg1 byDegrees:(double)arg2;
- (struct CGPoint)_rotatedPoint:(struct CGPoint)arg1 byDegrees:(double)arg2;
- (void)_flipImageDirectionWithAnimation:(int)arg1;
- (void)_flipImageDirection:(int)arg1;
- (void)flipImageVertical;
- (void)flipImageHorizontal;
- (BOOL)_flipShouldHappenOnOppositeOfRequestedAxis;
- (double)defaultTransformAnimationDuration;
- (BOOL)isAnimatingTransform;
- (void)_uninstallAnimationLayer;
- (void)_installAnimationLayer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)pausedInZoomGesture:(id)arg1;
- (void)_cleanUpZoomTimer;
- (void)setZoomFactor:(double)arg1 centeredAtImagePoint:(struct CGPoint)arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
- (struct CGPoint)_positionAfterZoomAnimationWithScale:(double)arg1 andCenter:(struct CGPoint)arg2;
- (struct CGPoint)_scrollPointAfterChangingSizeTo:(struct CGSize)arg1;
- (void)_zoomToFit;
@property BOOL stickyZoomToFit;
- (double)zoomToFitScaleFactor;
- (void)zoomToFullSize;
- (void)zoomImageToScale:(double)arg1 aroundImagePoint:(struct CGPoint)arg2;
- (struct CGRect)_rectToLoadForZoomFactor:(double)arg1 withViewCenterPoint:(struct CGPoint)arg2;
- (void)setMinNearestNeighborScale:(double)arg1;
- (void)_setZoomFactor:(double)arg1 loadInRect:(struct CGRect)arg2;
- (id)flattenedUnfilteredCIImage;
- (void)setupFlattenedCIImage;
- (void)clearFlattenedCIImage;
- (void)_resetScaledCIImage;
- (void)_setZoomFactor:(double)arg1;
- (double)zoomFactorWithScreenScale;
- (void)_setEnclosingScrollViewScrollersCanShow:(BOOL)arg1;
- (void)_setEnclosingScrollViewScrollersCanShowIfAllowed:(BOOL)arg1;
- (void)scrollDidEndMagnify:(id)arg1;
- (void)scrollWillStartMagnify:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)viewDidScroll:(id)arg1;
- (void)_scheduleDeferredCleanupOfUnseenBlocks;
- (void)_clearUnseenImageBlocksTimerFired:(id)arg1;
- (void)imageViewResized:(id)arg1;
- (void)_cancelLoadBlocks;
- (void)setAnimates:(BOOL)arg1;
- (struct CGSize)_imageSizeWithExif:(unsigned long long)arg1;
- (void)applyExif:(id)arg1;
- (void)_resetLayersAndReloadLayersWithImageProperties:(id)arg1 displayProperties:(id)arg2;
- (void)_clearBackgroundLayer;
- (void)_doFastPathUpdate;
- (void)insertOverlayView:(id)arg1;
@property(readonly) CALayer *annotationsLayer;
@property(readonly) NSView *annotationsView;
- (void)_updateAnnotationsView;
- (void)_setUnderlyingCIImage:(id)arg1;
- (BOOL)_setImageWithSize:(struct CGSize)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (BOOL)_setCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (void)setFlattenedDrawingCIImage:(id)arg1;
- (BOOL)setCIImage:(id)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (BOOL)setImage:(struct CGImage *)arg1 imageProperties:(id)arg2 displayProperties:(id)arg3;
- (BOOL)setImageData:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (BOOL)setImageURL:(id)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (BOOL)_setImageFromImageSource:(struct CGImageSource *)arg1 imageAtIndex:(long long)arg2 withDisplayProperties:(id)arg3;
- (id)_commonOptionsForImageFromSource:(id)arg1;
- (struct CGImage *)_newPossiblySubsampledImageFromSource:(struct CGImageSource *)arg1 index:(long long)arg2 imageScale:(double)arg3 displayProperties:(id)arg4;
- (BOOL)_imageHasAppropriateAttachedThumbnail:(struct CGImageSource *)arg1 imageWidth:(double)arg2 imageHeight:(double)arg3 scale:(double)arg4 outBestMaxDimension:(double *)arg5;
- (struct CGImage *)_newScaledImageFromSource:(struct CGImageSource *)arg1 index:(long long)arg2 imageScale:(double)arg3 canUseExistingThumbnail:(BOOL)arg4 displayProperties:(id)arg5;
- (struct CGImage *)_newCGImageFromImgSrc:(struct CGImageSource *)arg1 index:(long long)arg2 displayProperties:(id)arg3 imageScale:(double)arg4 forceScale:(BOOL)arg5 canUseExistingThumbnail:(BOOL)arg6 createBitmapImmediately:(BOOL)arg7;
- (BOOL)_imageTypeSupportsSubsampling:(struct __CFString *)arg1;
- (struct CGImageSource *)_createImageSourceFromLoadedRepresentation;
- (BOOL)_hasLoadedRepresentation;
- (void)dealloc;
- (BOOL)_hasBeenTornDown;
- (void)teardown;
- (void)removeFromSuperview;
- (void)finishMovingViewToScrollView;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)unfreezeMoveToWindowUpdates;
- (void)freezeMoveToWindowUpdates;
- (void)returnBorrowedContent;
- (id)borrowContent;
@property struct CGImage *thumbnailCGImage;
@property struct CGImage *originalCGImage;
@property struct CGImage *cachedHigherResThumbnailImage;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1 andImageView:(id)arg2;

@end

