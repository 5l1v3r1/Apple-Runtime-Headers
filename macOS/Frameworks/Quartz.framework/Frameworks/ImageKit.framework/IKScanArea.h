//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class IKNSelection, IKScannerDeviceViewHandler, NSURL;

__attribute__((visibility("hidden")))
@interface IKScanArea : NSObject
{
    struct CGPoint _pt0;
    struct CGPoint _pt1;
    struct CGPoint _pt2;
    struct CGPoint _pt3;
    double _angle0;
    double _angle1;
    double _angle2;
    double _angle3;
    double _angle;
    double _rho0;
    double _rho1;
    double _rho2;
    double _rho3;
    struct CGRect _scanArea;
    struct CGRect _scanAreaFlipped;
    struct CGRect _scanAreaFlippedNonClipped;
    int _autoResolution;
    int _autoBitDepth;
    IKScannerDeviceViewHandler *_scannerDeviceViewHandler;
    struct CGImage *_cgImage;
    NSURL *_scannedURL;
    int _index;
    BOOL _shouldAutoScan;
    BOOL _scanComplete;
    BOOL _scanInProgress;
    id _extraStorage;
    double _scanProgressDone;
    IKNSelection *_selection;
    struct CGRect _ikSelectionRect;
    struct CGPoint _ikSelectionPosition;
    double _ikSelectionAngle;
    double _overviewToFinalScaling;
}

@property double overviewToFinalScaling; // @synthesize overviewToFinalScaling=_overviewToFinalScaling;
@property(readonly) double ikSelectionAngle; // @synthesize ikSelectionAngle=_ikSelectionAngle;
@property(readonly) struct CGPoint ikSelectionPosition; // @synthesize ikSelectionPosition=_ikSelectionPosition;
@property(readonly) struct CGRect ikSelectionRect; // @synthesize ikSelectionRect=_ikSelectionRect;
@property IKNSelection *selection; // @synthesize selection=_selection;
@property(nonatomic) double scanProgressDone; // @synthesize scanProgressDone=_scanProgressDone;
@property id extraStorage; // @synthesize extraStorage=_extraStorage;
@property BOOL scanInProgress; // @synthesize scanInProgress=_scanInProgress;
@property BOOL scanComplete; // @synthesize scanComplete=_scanComplete;
@property BOOL shouldAutoScan; // @synthesize shouldAutoScan=_shouldAutoScan;
@property int index; // @synthesize index=_index;
@property int autoBitDepth; // @synthesize autoBitDepth=_autoBitDepth;
@property int autoResolution; // @synthesize autoResolution=_autoResolution;
@property struct CGRect scanAreaFlippedNonClipped; // @synthesize scanAreaFlippedNonClipped=_scanAreaFlippedNonClipped;
@property struct CGRect scanAreaFlipped; // @synthesize scanAreaFlipped=_scanAreaFlipped;
@property struct CGRect scanArea; // @synthesize scanArea=_scanArea;
@property double angle; // @synthesize angle=_angle;
@property double rho3; // @synthesize rho3=_rho3;
@property double rho2; // @synthesize rho2=_rho2;
@property double rho1; // @synthesize rho1=_rho1;
@property double rho0; // @synthesize rho0=_rho0;
@property double angle3; // @synthesize angle3=_angle3;
@property double angle2; // @synthesize angle2=_angle2;
@property double angle1; // @synthesize angle1=_angle1;
@property double angle0; // @synthesize angle0=_angle0;
@property struct CGPoint pt3; // @synthesize pt3=_pt3;
@property struct CGPoint pt2; // @synthesize pt2=_pt2;
@property struct CGPoint pt1; // @synthesize pt1=_pt1;
@property struct CGPoint pt0; // @synthesize pt0=_pt0;
@property(copy) NSURL *scannedURL; // @synthesize scannedURL=_scannedURL;
@property struct CGImage *cgImage; // @synthesize cgImage=_cgImage;
@property IKScannerDeviceViewHandler *scannerDeviceViewHandler; // @synthesize scannerDeviceViewHandler=_scannerDeviceViewHandler;
- (id)imageTitle;
- (id)imageRepresentation;
- (id)imageRepresentationType;
- (id)imageUID;
- (BOOL)update:(struct vImage_Buffer *)arg1 imageIndex:(unsigned char)arg2;
- (BOOL)simpleScanAreaDetection:(struct vImage_Buffer *)arg1 validateResult:(BOOL)arg2;
- (BOOL)simpleScanAreaDetection:(struct vImage_Buffer *)arg1 top:(int)arg2 bottom:(int)arg3 left:(int)arg4 right:(int)arg5 validateResult:(BOOL)arg6;
- (BOOL)validScanAreaForBuffer:(struct vImage_Buffer *)arg1;
- (void)createCGImageFromBuffer;
- (void)finalize;
- (void)dealloc;
- (void)cleanup;
- (id)initWithIKNSelection:(id)arg1;
- (id)initWithImage:(struct CGImage *)arg1 rect:(struct CGRect)arg2;
- (id)description;
- (id)init;

@end

