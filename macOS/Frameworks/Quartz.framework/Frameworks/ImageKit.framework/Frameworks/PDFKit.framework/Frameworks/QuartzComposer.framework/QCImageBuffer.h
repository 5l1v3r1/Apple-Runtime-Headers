//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzComposer/QCResource.h>

@class QCPixelFormat;

@interface QCImageBuffer : QCResource
{
    unsigned long long _identifier;
    int _status;
    struct CGColorSpace *_colorspace;
    QCPixelFormat *_format;
    unsigned long long _width;
    unsigned long long _height;
    BOOL _flipped;
    void *_backing;
    CDUnknownFunctionPointerType _backingCallback;
    void *_backingInfo;
    double _cost;
    unsigned long long _cacheRetainCount;
    struct __CFArray *_caches;
    struct _opaque_pthread_mutex_t _cachesMutex;
    void *_unused1[4];
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)didRecycleResource:(id)arg1;
- (void)willRecycleResource:(id)arg1;
- (void *)backingReleaseInfo;
- (CDUnknownFunctionPointerType)backingReleaseCallback;
- (void *)backing;
- (void)setBacking:(void *)arg1 releaseCallback:(CDUnknownFunctionPointerType)arg2 releaseInfo:(void *)arg3;
- (void)endUpdateBuffer:(BOOL)arg1;
- (BOOL)beginUpdateBuffer:(BOOL)arg1 colorSpace:(struct CGColorSpace *)arg2;
- (BOOL)beginUpdateBuffer:(BOOL)arg1;
- (BOOL)isFlipped;
- (unsigned long long)pixelsHigh;
- (unsigned long long)pixelsWide;
- (struct CGColorSpace *)colorSpace;
- (id)pixelFormat;
- (int)status;
- (unsigned long long)identifier;
- (void)dealloc;
- (void)finalize;
- (void)_finalize_QCImageBuffer;
- (id)copyWithZone_GCCacheResource:(struct _NSZone *)arg1;
- (id)initWithFormat:(id)arg1 pixelsWide:(unsigned long long)arg2 pixelsHigh:(unsigned long long)arg3 options:(id)arg4;
- (void)clearBuffer;
- (BOOL)writeToFile:(id)arg1;
- (void)_invalidateData;
- (void)removeFromAllCachesExcept:(id)arg1;
- (unsigned long long)cacheRetainCount;
- (void)cacheRelease:(id)arg1;
- (id)cacheRetain:(id)arg1;
- (double)cost;
- (void)setCost:(double)arg1;
- (unsigned long long)byteSize;
- (id)pixelBufferRepresentation;
- (struct CGRect)bounds;

@end

