//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <QuartzComposer/QCSCN_SceneRenderer-Protocol.h>

@class NSString, QCSCN_Node, QCSCN_Scene;
@protocol QCSCN_SceneRendererDelegate;

__attribute__((visibility("hidden")))
@interface QCSCN_Renderer : NSObject <QCSCN_SceneRenderer>
{
    id _reserved;
}

+ (int)_baseTypeForProperty:(id)arg1;
+ (Class)typeForProperty:(id)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
+ (id)propertyKeys;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)rendererWithContext:(void *)arg1 options:(id)arg2;
- (id)propertyKeys;
- (void)pause;
- (void)stop;
- (void)play;
- (BOOL)jitteringEnabled;
@property(nonatomic, getter=isJitteringEnabled) BOOL jitteringEnabled;
- (void)_detachShader:(id)arg1;
- (void)_attachShader:(id)arg1;
- (void)_detachTexture:(id)arg1;
- (void)_attachTexture:(id)arg1;
@property(nonatomic) BOOL loops;
@property(getter=isPlaying) BOOL playing;
- (void)stop:(id)arg1;
- (void)pause:(id)arg1;
- (void)play:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 viewport:(struct CGSize)arg2 options:(id)arg3;
- (id)hitTest:(struct CGPoint)arg1 options:(id)arg2;
- (void)renderNode:(id)arg1 options:(id)arg2;
- (void)render;
- (struct CGImage *)copySnapshotWithSize:(struct CGSize)arg1;
- (void)drawInGLContext:(void *)arg1;
- (void)evaluateAnimationsAtSystemTime:(double)arg1;
@property(readonly, nonatomic) void *context;
- (void)setContext:(void *)arg1;
- (double)nextFrameTime;
- (void)setNextFrameTime:(double)arg1;
- (void)updateCurrentTimeWithSystemTime:(double)arg1;
@property(nonatomic) id <QCSCN_SceneRendererDelegate> delegate;
- (BOOL)warmUpScene:(id)arg1 abortHandler:(CDUnknownBlockType)arg2;
@property(readonly, copy) NSString *description;
@property(retain) id cameraModifier;
- (void)setWarmUpResourcesWhenLoadingScene:(BOOL)arg1;
- (BOOL)warmUpResourcesWhenLoadingScene;
- (struct C3DColor4 *)backgroundColorComponents;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (id)scnContext;
@property(retain, nonatomic) QCSCN_Scene *scene;
- (void)_setScene:(id)arg1;
- (void)sceneDidChange;
- (void)sceneWillChange;
@property(nonatomic) double currentTime;
- (void)_setCurrentTime:(double)arg1;
- (BOOL)autoAdjustCamera;
- (void)setAutoAdjustCamera:(BOOL)arg1;
-     // Error parsing type: v24@0:8^{__C3DEngineAdaptor={__CFRuntimeBase=QAQ}^v^{__C3DEngineContext}^v}16, name: _setupCallbacks:
- (void)willRenderScene:(id)arg1;
- (void)didRenderScene:(id)arg1;
@property(retain, nonatomic) QCSCN_Node *pointOfView;
@property(nonatomic) BOOL autoenablesDefaultLighting;
- (void)setEnableDefaultLight:(BOOL)arg1;
- (BOOL)enableDefaultLight;
- (void *)__CFObject;
-     // Error parsing type: ^{__C3DEngineAdaptor={__CFRuntimeBase=QAQ}^v^{__C3DEngineContext}^v}16@0:8, name: engine
-     // Error parsing type: v24@0:8^{__C3DEngineAdaptor={__CFRuntimeBase=QAQ}^v^{__C3DEngineContext}^v}16, name: setEngine:
-     // Error parsing type: v24@0:8^{__C3DEngineAdaptor={__CFRuntimeBase=QAQ}^v^{__C3DEngineContext}^v}16, name: _engineDidChange:
-     // Error parsing type: v24@0:8^{__C3DEngineAdaptor={__CFRuntimeBase=QAQ}^v^{__C3DEngineContext}^v}16, name: _engineWillChange:
-     // Error parsing type: ^{__C3DEngineContext={__CFRuntimeBase=QAQ}^{__C3DScene}^{__C3DNode}^{__C3DNode}{?=^?^?}^v^{__C3DRendererContext}^{__C3DFXContext}B^{__C3DCommonProfileProgramTree}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}^{__CFDictionary}^{__C3DObjectPool}^{__CFDictionary}^{__CFArray}d}16@0:8, name: engineContext
- (void)dealloc;
- (struct _CGLPixelFormatObject *)pixelFormat;
- (void)unlock;
- (void)lock;
- (struct CGSize)offscreenBufferSize;
- (id)initOffscreenRendererWithSize:(struct CGSize)arg1 options:(id)arg2;
- (id)initOffscreenRendererWithSize:(struct CGSize)arg1;
- (void)initializeOffscreenWithSize:(struct CGSize)arg1 options:(id)arg2;
- (id)initPublicWithOptions:(id)arg1;
- (id)init;
- (id)initWithOptions:(id)arg1;
- (void)_commonInitWithOptions:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

