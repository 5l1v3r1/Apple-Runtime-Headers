//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzComposer/QCResource.h>

@class NSDictionary, QCPixelFormat, QCResourcePool;

@interface QCCGLContext : QCResource
{
    QCCGLContext *_rootContext;
    NSDictionary *_options;
    struct _CGLContextObject *_cglContext;
    struct _CGLPixelFormatObject *_cglPixelFormat;
    unsigned long long _virtualScreenCount;
    struct __CFDictionary *_ciContextCache;
    struct __CFDictionary *_rootC3DContextCache;
    void *_c3dContext;
    QCResourcePool *_sharedPool;
    unsigned long long _defaultSharedVirtualScreen;
    unsigned long long _cachedVirtualScreen;
    unsigned long long _flags;
    QCPixelFormat *_renderPixelFormat;
    id _nsglContext;
    id _nsglPixelFormat;
    void *_unused2[2];
}

+ (id)hardwareContextForDisplay:(unsigned int)arg1;
+ (id)softwareContextForFormat:(id)arg1;
+ (id)contextWithPixelFormatAttributes:(const int *)arg1 options:(id)arg2;
+ (void)initialize;
+ (id)CIBitmapContext;
+ (id)createUniqueContextWithOptions:(id)arg1;
+ (id)copyGlobalRootContext;
- (id)description;
- (void)purgeResources;
- (void)reclaimResources;
- (BOOL)isSharedWithContext:(id)arg1;
- (id)rootContext;
- (BOOL)didRecycleResource:(id)arg1;
- (void)willRecycleResource:(id)arg1;
- (void)setResourcePool:(id)arg1;
- (void)clearMinimalSharedContextForCurrentThread;
- (id)minimalSharedContextForCurrentThread;
- (id)createMinimalSharedContextWithAdditionalAttributes:(const int *)arg1 recycleWhenDone:(BOOL)arg2;
- (id)createMinimalSharedContext;
- (unsigned long long)virtualScreenCount;
- (unsigned long long)virtualScreen;
- (void)setVirtualScreen:(unsigned long long)arg1;
- (void)setBestVirtualScreenForRenderingSize:(struct CGSize)arg1;
- (void)unlock;
- (void)lock;
- (long long)getParameter:(int)arg1;
- (BOOL)setParameter:(int)arg1 value:(long long)arg2;
- (BOOL)isEnabled:(int)arg1;
- (BOOL)disable:(int)arg1;
- (BOOL)enable:(int)arg1;
- (struct _CGLPixelFormatObject *)CGLPixelFormatObj;
- (struct _CGLContextObject *)CGLContextObj;
- (id)options;
- (void)dealloc;
- (void)finalize;
- (void)_finalize_QCCGLContext;
- (id)initWithCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 options:(id)arg3;
- (id)initWithPixelFormatAttributes:(const int *)arg1 options:(id)arg2;
- (BOOL)copyPixelsFromBounds:(int *)arg1 toSharedCGLContext:(struct _CGLContextObject *)arg2 usingInternalFormat:(unsigned int)arg3;
- (BOOL)readPixelsFromBounds:(int *)arg1 toBaseAddress:(void *)arg2 withBytesPerRow:(unsigned long long)arg3 pixelType:(unsigned int)arg4;
- (struct CGSize)fitTextureSize:(struct CGSize)arg1 forTarget:(unsigned int)arg2 uniformScaling:(BOOL)arg3;
- (id)renderingPixelFormat;
- (unsigned long long)maxTextureSizeForTarget:(unsigned int)arg1;
- (unsigned long long)maxRenderingSize;
- (BOOL)isExtensionSupported:(id)arg1;
- (BOOL)isFloatSupported;
- (BOOL)is16BitSupported;
- (BOOL)isFBOSupported;
- (BOOL)isCoreImageAccelerated;
- (BOOL)isProgrammable;
- (BOOL)isAccelerated;
- (unsigned long long)textureMaxImageUnits;
- (unsigned long long)textureUnits;
- (long long)rendererIDForVirtualScreen:(long long)arg1;
- (long long)rendererID;
- (float)rendererVersion;
- (id)rendererName;
- (id)rendererVendor;
- (unsigned long long)_validateCachedVirtualScreen;
- (unsigned long long)textureMemorySize;
- (unsigned long long)videoMemorySize;
- (int)_rendererPropertyValue:(int)arg1;
- (BOOL)hasDrawable;
- (struct __C3DEngineContext *)QCSCN_Context;
- (id)CIContext;
- (id)_ciContext;
- (id)createSnapshotImageOfType:(id)arg1 withColorSpace:(struct CGColorSpace *)arg2;
- (id)NSOpenGLPixelFormat;
- (id)NSOpenGLContext;
- (id)initWithOpenGLContext:(id)arg1 pixelFormat:(id)arg2 options:(id)arg3;

@end

