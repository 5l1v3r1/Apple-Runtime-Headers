//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <QuickLookUI/QLDisplayBundleOwner-Protocol.h>

@class NSArray, NSScreen, NSString, NSURL, QLDisplayBundle, QLPreviewDocumentReserved, QLPreviewView;
@protocol QLPreviewItem;

@interface QLPreviewDocument : NSObject <QLDisplayBundleOwner>
{
    QLPreviewDocumentReserved *_reserved;
    BOOL _isSavingMarkup;
    long long _saveMode;
}

+ (id)keyPathsForValuesAffectingCurrentURL;
+ (id)keyPathsForValuesAffectingAllowsAlerts;
+ (id)keyPathsForValuesAffectingShouldUseHardwareCodec;
+ (id)keyPathsForValuesAffectingIsWindowKey;
+ (id)keyPathsForValuesAffectingIsRemote;
+ (id)keyPathsForValuesAffectingVisualMargins;
+ (id)keyPathsForValuesAffectingBounds;
+ (id)keyPathsForValuesAffectingFlavor;
+ (id)keyPathsForValuesAffectingMode;
+ (id)keyPathsForValuesAffectingDisplayable;
+ (id)keyPathsForValuesAffectingIsLoaded;
+ (id)keyPathsForValuesAffectingNumberOfPages;
@property(readonly, copy) NSString *description;
- (void)updateFullScreenFromMagnification:(double)arg1;
- (void)doubleClickOnPreviewContent;
- (void)displayBundle:(id)arg1 didShowScreentimeLockout:(BOOL)arg2;
- (void)displayBundleCustomTitleUpdated:(id)arg1;
- (void)displayBundleSizingUpdated:(id)arg1;
- (void)displayBundle:(id)arg1 requestReloadAndFallbackWithError:(id)arg2;
- (void)displayBundleAddHiddenContentViewToWindowForLoading:(id)arg1;
- (void)displayBundle:(id)arg1 didSaveEdit:(BOOL)arg2 toURL:(id)arg3;
- (void)displayBundle:(id)arg1 didEditPage:(long long)arg2;
- (void)displayBundleDidExitMarkup:(id)arg1 waitingForSave:(BOOL)arg2;
- (void)displayBundleDidEnterMarkup:(id)arg1;
- (void)displayBundleDidDesistRemote:(id)arg1 expectedDisplayBundleID:(id)arg2;
- (void)displayBundleFailedToLoad:(id)arg1 withError:(id)arg2;
- (void)displayBundleDidMismatchLoading:(id)arg1 withHints:(id)arg2 expectedDisplayBundleID:(id)arg3;
- (void)displayBundleDidLoad:(id)arg1;
@property(readonly) int previewStatus;
@property(readonly) BOOL windowSupportsRemoteViews;
@property(readonly) NSScreen *screen;
@property(readonly) double backingScaleFactor;
@property BOOL tracksMouseMovements;
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromScreen:(struct CGRect)arg1;
- (struct CGPoint)convertPointToScreen:(struct CGPoint)arg1;
- (struct CGRect)convertRectToScreen:(struct CGRect)arg1;
- (struct CGPoint)locationForEvent:(id)arg1;
- (id)viewForEvent:(id)arg1;
- (void)openExternalURL:(id)arg1;
- (BOOL)shouldOpenURL:(id)arg1;
- (void)stopWatchingURL:(id)arg1;
- (void)startWatchingURL:(id)arg1;
@property(readonly) NSURL *currentURL;
@property(readonly) BOOL allowsAlerts;
@property(readonly) BOOL shouldUseHardwareCodec;
@property(readonly) BOOL isWindowKey;
@property(readonly) BOOL isRemote;
@property(readonly) struct NSEdgeInsets visualMargins;
@property(readonly) struct CGRect bounds;
@property(readonly) int flavor;
@property(readonly) int mode;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)rotate:(long long)arg1;
@property(readonly) BOOL isSaving;
@property(readonly) NSURL *savedCopyURL;
@property long long saveMode;
@property BOOL wasEdited;
- (void)setInitialEditMode:(long long)arg1;
- (long long)initialEditMode;
@property(copy) NSString *password;
- (BOOL)isExternalDocument;
- (void)setExternalDocument:(BOOL)arg1;
- (unsigned long long)state;
- (void)setState:(unsigned long long)arg1;
- (id)displayState;
- (void)_stopObservingDocumentDirty;
- (void)_startObservingDocumentDirty;
@property(retain) QLDisplayBundle *displayBundle;
@property(retain) QLDisplayBundle *loadingDisplayBundle;
- (void)setPreviewView:(id)arg1;
@property(readonly) QLPreviewView *previewView;
@property(readonly) id <QLPreviewItem> previewItem;
-     // Error parsing type: ^{__QLPreview={__CFRuntimeBase=QAQ}@^{__CFURL}^{__CFDictionary}^{__CFString}@{?=q^?^?^?^?}^vIiCCi^{__CFDictionary}^{__QLServer}^{__QLGenerator}CICCCC^{__CFString}^{__CFString}i^{__CFSet}{CGSize=dd}C^{__CFString}^{__CFString}^{__CFString}^{__CFURL}^{__CFData}^{__CFData}iiiiiI{CGRect={CGPoint=dd}{CGSize=dd}}CCC^{__CFString}C@}16@0:8, name: preview
- (id)displayable;
@property(readonly) BOOL isGeneric;
@property(readonly) BOOL isLoaded;
- (void)setFocusedOccurrenceIndex:(unsigned long long)arg1 inPage:(unsigned long long)arg2;
@property unsigned long long focusedOccurrenceIndex;
@property(retain) NSArray *highlightedOccurrences;
- (id)findOccurrencesOfString:(id)arg1 inPage:(unsigned long long)arg2 withOptions:(unsigned long long)arg3;
- (id)stringForPage:(unsigned long long)arg1;
- (BOOL)drawPage:(unsigned long long)arg1 inRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (BOOL)generateThumbnailForPage:(unsigned long long)arg1 maxSize:(struct CGSize)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (double)thumbnailAspectRatioForPage:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfPages;
- (void)_loadPreviewFailedDueToPasswordProtection;
- (void)_loadPreviewFailedWithError:(id)arg1;
- (void)_loadPreviewMismatchedWithExpectedDisplayBundleID:(id)arg1 hints:(id)arg2;
- (void)_loadPreviewSucceeded;
- (void)_didEndLoading;
- (void)_fallbackLoadWithError:(id)arg1;
- (void)_loadWithDisplayBundleID:(id)arg1 hints:(id)arg2 remoteMode:(unsigned long long)arg3;
- (void)willTimeOut;
- (void)invalidate;
- (void)cancelPreview;
- (id)_hintsWithPreviewViewForWebviewPreloading:(id)arg1;
- (BOOL)_bundleMustLoadInWindow:(id)arg1;
- (void)_loadDisplayBundleID:(id)arg1 withLastError:(int)arg2 hints:(id)arg3;
- (void)startLoadingWithForcedDisplayBundleID:(id)arg1 hints:(id)arg2;
- (void)startLoading;
- (void)_setupCoreSpotlightPropertiesFromPreviewItem:(id)arg1;
- (void)_setupPreviewWithURL:(id)arg1 searchUID:(id)arg2 appBundleID:(id)arg3 extensionPath:(id)arg4 contentType:(id)arg5 hints:(id)arg6;
- (void)dealloc;
- (id)initWithPreviewItem:(id)arg1 forPreviewView:(id)arg2;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

