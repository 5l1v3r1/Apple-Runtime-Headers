//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AEDesc {
    unsigned int descriptorType;
    struct OpaqueAEDataStorageType **dataHandle;
};

struct AEKeyDesc {
    unsigned int descKey;
    struct AEDesc descContent;
};

struct Data {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct Table _field8;
};

struct ExtendedFileInfo {
    short _field1[4];
    unsigned short _field2;
    short _field3;
    int _field4;
};

struct ExtendedFolderInfo {
    struct Point _field1;
    int _field2;
    unsigned short _field3;
    short _field4;
    int _field5;
};

struct FSRef {
    unsigned char _field1[80];
};

struct FileInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    struct Point _field4;
    unsigned short _field5;
};

struct FolderInfo {
    struct Rect _field1;
    unsigned short _field2;
    struct Point _field3;
    unsigned short _field4;
};

struct LSApplicationParameters_V1 {
    long long _field1;
    unsigned int _field2;
    struct FSRef *_field3;
    void *_field4;
    struct __CFDictionary *_field5;
    struct __CFArray *_field6;
    struct AEDesc *_field7;
    struct __CFArray *_field8;
    struct __CFURL *_field9;
    struct ProcessSerialNumber *_field10;
};

struct LSBundleData {
    unsigned int _clas;
    unsigned long long _bundleFlags;
    unsigned int _plistContentFlags;
    unsigned int _itemFlags;
    unsigned char _iconFlags;
    unsigned char _highResFlags;
    unsigned char _appNapFlags;
    unsigned char eGPUFlags;
    unsigned short _archFlags;
    unsigned int _hfsType;
    unsigned int _hfsCreator;
    unsigned long long _inoBundle;
    unsigned long long _inoExec;
    int _mtime;
    int _rtime;
    unsigned long long _version;
    unsigned long long _minSystemVersion;
    unsigned long long _maxSystemVersion;
    unsigned long long _execSDKVersion;
    unsigned long long _execMinOSVersion;
    unsigned int machOUUIDs[4];
    unsigned long long sequenceNumber;
    unsigned long long compatibilityState;
    unsigned long long installFailureReason;
    unsigned int deviceFamilies;
    unsigned int installType;
    unsigned int teamID;
    unsigned int identifier;
    unsigned int exactIdentifier;
    unsigned int name;
    unsigned int displayName;
    unsigned int companionAppID;
    unsigned int counterpartIdentifiers;
    unsigned int categoryType;
    unsigned int secondaryCategoryType;
    unsigned int filename;
    unsigned int bundleVersion;
    unsigned int shortVersionString;
    unsigned int signerIdentity;
    unsigned int codeInfoIdentifier;
    unsigned int signerOrganization;
    unsigned int appType;
    unsigned long long staticDiskUsage;
    unsigned long long purchaserDSID;
    unsigned long long downloaderDSID;
    unsigned long long familyID;
    unsigned int vendorName;
    unsigned int itemName;
    unsigned long long storefront;
    unsigned long long versionIdentifier;
    unsigned long long ratingRank;
    unsigned int ratingLabel;
    unsigned long long genreID;
    unsigned int genre;
    unsigned int sourceAppIdentifier;
    unsigned int appVariant;
    unsigned int primaryIconName;
    unsigned int iconsDict;
    unsigned int iconFileNames;
    unsigned int execPath;
    unsigned int libraryPath;
    unsigned int libraryItems;
    unsigned int claims;
    unsigned int types;
    unsigned int services;
    unsigned int alternateNames;
    unsigned int plugins;
    unsigned int extensionPoints;
    unsigned int activityTypes;
    unsigned int schemesWhitelist;
    unsigned int alias;
    unsigned int appContainerAlias;
    unsigned int dataContainerAlias;
    unsigned int container;
    unsigned char revision;
    unsigned char retries;
    unsigned char _reserved3;
    unsigned char _reserved4;
    unsigned int plistRarities;
    unsigned int commonPlistEntries;
    unsigned int entitlements;
    unsigned int groupContainers;
    unsigned int sandboxEnvironmentVariables;
    unsigned int _reserved5;
};

struct LSContext {
    struct LSDatabase *db;
};

struct LSDatabase;

struct NSMutableDictionary {
    Class _field1;
};

struct NSMutableSet {
    Class _field1;
};

struct NSXPCConnection {
    Class _field1;
    void *_field2;
    id _field3;
    id _field4;
    unsigned int _field5;
    unsigned int _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
};

struct OpaqueAEDataStorageType;

struct Point {
    short _field1;
    short _field2;
};

struct ProcessSerialNumber {
    unsigned int highLongOfPSN;
    unsigned int lowLongOfPSN;
};

struct Rect {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
};

struct Store;

struct Table {
    struct Unit _field1;
    char _field2[64];
    unsigned int _field3;
    unsigned int _field4;
};

struct Unit {
    unsigned int :30;
    unsigned int :2;
    unsigned int _field1;
    char _field2[0];
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __CFArray;

struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> *_field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct unique_ptr<CSStore2::Store, std::__1::default_delete<CSStore2::Store>> {
    struct __compressed_pair<CSStore2::Store *, std::__1::default_delete<CSStore2::Store>> {
        struct Store *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<ProcessSerialNumber, std::__1::allocator<ProcessSerialNumber>> {
    struct ProcessSerialNumber *__begin_;
    struct ProcessSerialNumber *__end_;
    struct __compressed_pair<ProcessSerialNumber *, std::__1::allocator<ProcessSerialNumber>> {
        struct ProcessSerialNumber *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8[1];
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
} CDStruct_2b3aadc0;

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

// Template types
typedef struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_7cdfe647;

#pragma mark Typedef'd Unions

typedef union {
    unsigned char _field1[32];
    struct {
        struct FileInfo _field1;
        struct ExtendedFileInfo _field2;
    } _field2;
    struct {
        struct FolderInfo _field1;
        struct ExtendedFolderInfo _field2;
    } _field3;
} CDUnion_1c06bd30;

