//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AMPArtworkClient, AMPLFrameworkClient, NSArray, NSDictionary, NSNumber, NSString, NSURL;

@interface ITLibrary : NSObject
{
    BOOL _libraryLoaded;
    AMPLFrameworkClient *_libraryClient;
    AMPArtworkClient *_artworkClient;
    unsigned long long _mediaDomains;
    NSNumber *_persistentID;
    NSArray *_cachedMediaItems;
    NSArray *_cachedPlaylists;
    NSArray *_cachedArtists;
    NSArray *_cachedAlbums;
    NSArray *_cachedGenres;
    NSDictionary *_cachedItemMap;
    NSDictionary *_cachedMigratedPodcastSettings;
}

+ (id)libraryWithDeviceID:(id)arg1 error:(id *)arg2;
+ (id)libraryWithAPIVersion:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)libraryWithAPIVersion:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSDictionary *cachedMigratedPodcastSettings; // @synthesize cachedMigratedPodcastSettings=_cachedMigratedPodcastSettings;
@property(retain, nonatomic) NSDictionary *cachedItemMap; // @synthesize cachedItemMap=_cachedItemMap;
@property(retain, nonatomic) NSArray *cachedGenres; // @synthesize cachedGenres=_cachedGenres;
@property(retain, nonatomic) NSArray *cachedAlbums; // @synthesize cachedAlbums=_cachedAlbums;
@property(retain, nonatomic) NSArray *cachedArtists; // @synthesize cachedArtists=_cachedArtists;
@property(retain, nonatomic) NSArray *cachedPlaylists; // @synthesize cachedPlaylists=_cachedPlaylists;
@property(retain, nonatomic) NSArray *cachedMediaItems; // @synthesize cachedMediaItems=_cachedMediaItems;
@property(retain, nonatomic) NSNumber *persistentID; // @synthesize persistentID=_persistentID;
@property(nonatomic) BOOL libraryLoaded; // @synthesize libraryLoaded=_libraryLoaded;
@property(nonatomic) unsigned long long mediaDomains; // @synthesize mediaDomains=_mediaDomains;
@property(retain, nonatomic) AMPArtworkClient *artworkClient; // @synthesize artworkClient=_artworkClient;
@property(retain, nonatomic) AMPLFrameworkClient *libraryClient; // @synthesize libraryClient=_libraryClient;
- (void).cxx_destruct;
- (id)itemsForIDs:(id)arg1;
- (id)artworkForMediaFile:(id)arg1;
- (id)artworkForMediaItem:(id)arg1;
- (id)artworkForData:(id)arg1;
- (id)readWriteURLForMediaItem:(id)arg1;
- (unsigned long long)privateFlags;
- (BOOL)haveMigratedPodcasts;
- (BOOL)haveMigratedBooks;
- (BOOL)libraryAgentPref:(struct __CFString *)arg1;
- (BOOL)restrictExplicitBooks;
- (BOOL)isAccountAdmin;
- (id)parentalRestrictions;
- (id)accountAppleMusicExpirationDate;
- (BOOL)isAccountEnrolledInITunesMatch;
- (BOOL)isAccountEnrolledInAppleMusic;
- (id)storeAccountDsid;
- (id)storeAccountAppleId;
- (id)storefrontId;
- (id)datePrefWithKey:(id)arg1;
- (id)numberPrefWithKey:(id)arg1;
- (id)stringPrefWithKey:(id)arg1;
- (BOOL)boolPrefWithKey:(id)arg1;
- (void)unloadData;
- (BOOL)reloadData;
- (BOOL)setPodcastsHaveMigrated:(id *)arg1;
- (void)migratedBooks:(id)arg1;
- (void)migratedMediaItems:(id)arg1;
- (void)downloadCloudMediaItem:(id)arg1;
- (unsigned long long)podcastFeedRemovePlayedRule;
- (unsigned long long)podcastFeedLimitRule;
- (unsigned long long)podcastFeedDownloadAction;
- (double)podcastFeedRefreshInterval;
- (unsigned long long)podcastCloudDSID;
- (BOOL)podcastCloudSyncingEnabled;
- (id)migratedPodcastSettingForKey:(id)arg1;
- (id)migratedPodcastSettings;
- (id)allPodcastStations;
- (id)allPodcastFeeds;
- (id)allMovieGenresForDeviceCapabilities:(unsigned long long)arg1;
- (id)allMusicGenresForDeviceCapabilities:(unsigned long long)arg1;
- (id)allGenres;
- (id)genresForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3;
- (id)allAudiobookAlbumsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allPodcastAlbumsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allTVShowAlbumsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allMusicAlbumsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allAlbums;
- (id)albumsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3;
- (id)allTVShowArtistsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allMusicArtistsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allArtists;
- (id)artistsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3;
- (id)allAudiobookPlaylistsForDeviceCapabilities:(unsigned long long)arg1 withItems:(BOOL)arg2;
- (id)allPodcastPlaylistsForDeviceCapabilities:(unsigned long long)arg1 withItems:(BOOL)arg2;
- (id)allTVShowPlaylistsForDeviceCapabilities:(unsigned long long)arg1 withItems:(BOOL)arg2;
- (id)allMoviePlaylistsForDeviceCapabilities:(unsigned long long)arg1 withItems:(BOOL)arg2;
- (id)allMusicPlaylistsForDeviceCapabilities:(unsigned long long)arg1 withItems:(BOOL)arg2;
@property(readonly, retain, nonatomic) NSArray *allPlaylists;
- (id)playlistWithDistinguishedKind:(unsigned long long)arg1 withItems:(BOOL)arg2;
- (id)playlistWithDistinguishedKind:(unsigned long long)arg1;
- (id)playlistsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 withItems:(BOOL)arg4;
- (id)allBookMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allAudiobookMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allPodcastMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allRentalMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allRentalMediaItems;
- (id)allTVShowMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allMovieMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
- (id)allMusicMediaItemsForDeviceCapabilities:(unsigned long long)arg1;
@property(readonly, retain, nonatomic) NSArray *allMediaItems;
- (id)itemMap;
- (id)mediaItemsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3;
@property(readonly, nonatomic, getter=shouldShowContentRating) BOOL showContentRating;
- (id)databaseID;
- (id)databaseURL;
@property(readonly, copy, nonatomic) NSURL *musicFolderLocation;
@property(readonly, copy, nonatomic) NSURL *mediaFolderLocation;
@property(readonly, nonatomic) unsigned long long apiMinorVersion;
@property(readonly, nonatomic) unsigned long long apiMajorVersion;
@property(readonly, nonatomic) unsigned long long features;
@property(readonly, copy, nonatomic) NSString *applicationVersion;
- (id)initWithDomains:(unsigned long long)arg1 error:(id *)arg2;
- (id)initWithDeviceID:(id)arg1 error:(id *)arg2;
- (id)initWithAPIVersion:(id)arg1 error:(id *)arg2;
- (id)initWithAPIVersion:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)configureWithDomains:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)configureWithDevice:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)loadLibrary:(id *)arg1;

@end

