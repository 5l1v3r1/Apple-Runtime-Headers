//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <InputMethodKit/IMKInputController.h>

#import "IMKCandidateControllerDelegate.h"
#import "IMKCandidateSelectionViewDelegate.h"

@class IMKCandidateController, NSArray, NSString;

@interface IMKCandidateBasedInputController : IMKInputController <IMKCandidateControllerDelegate, IMKCandidateSelectionViewDelegate>
{
    IMKCandidateController *_candidateController;
    BOOL _primaryCandidatesShownByScrubbing;
    NSArray *_secondaryCandidates;
    struct _NSRange _selectedRange;
    unsigned long long _windowLevel;
    BOOL _sInvalidateIMKTextOrientation;
    BOOL _sInvalidateIsIncrementalSearchInputContext;
    BOOL _sInvalidateIncrementalSearchClientGeometry;
}

@property(retain, nonatomic) NSArray *secondaryCandidates; // @synthesize secondaryCandidates=_secondaryCandidates;
@property(nonatomic) BOOL sInvalidateIncrementalSearchClientGeometry; // @synthesize sInvalidateIncrementalSearchClientGeometry=_sInvalidateIncrementalSearchClientGeometry;
@property(nonatomic) BOOL sInvalidateIsIncrementalSearchInputContext; // @synthesize sInvalidateIsIncrementalSearchInputContext=_sInvalidateIsIncrementalSearchInputContext;
@property(nonatomic) BOOL sInvalidateIMKTextOrientation; // @synthesize sInvalidateIMKTextOrientation=_sInvalidateIMKTextOrientation;
@property(nonatomic) unsigned long long windowLevel; // @synthesize windowLevel=_windowLevel;
@property(nonatomic) struct _NSRange selectedRange; // @synthesize selectedRange=_selectedRange;
@property(nonatomic) BOOL primaryCandidatesShownByScrubbing; // @synthesize primaryCandidatesShownByScrubbing=_primaryCandidatesShownByScrubbing;
@property(retain, nonatomic) IMKCandidateController *candidateController; // @synthesize candidateController=_candidateController;
- (void)setMarkedText:(id)arg1 selectionRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (id)secondaryCandidateControllerAuxiliaryViews;
- (BOOL)touchesEndedOutsideView;
- (void)touchesEnded;
- (void)shouldUpdateForPressAndHold:(id)arg1;
- (void)scrubbedCandidate:(id)arg1;
@property(readonly, nonatomic) BOOL automaticallyRestrictLayoutToPrimaryCandidateControllerLayout;
@property(readonly, nonatomic) BOOL automaticallyShowPrimaryCandidatesInSecondaryController;
- (id)currentInlineText;
- (id)textClient;
@property(readonly, nonatomic) unsigned long long incrementalSearchClientGeometry;
@property(readonly, nonatomic) BOOL isIncrementalSearchInputContext;
- (id)informationView;
- (BOOL)isUsingIncrementalSearch;
- (id)defaultDisplayMethod;
- (void)didSelectSortingMode:(id)arg1;
- (BOOL)shouldUpdateExistingCandidates;
- (id)candidatesForSortingMethod:(id)arg1;
- (long long)windowType;
- (id)sortingMethods;
- (id)displayMethod;
- (id)functionRowItemTextInputViewController;
- (id)inlineText;
- (void)hideSecondaryCandidatesOnly;
- (void)reloadSecondaryCandidatesOnly;
- (void)hideCandidates;
- (void)reloadCandidates;
- (void)dismissSecondaryCandidates;
- (void)presentSecondaryCandidates;
- (BOOL)selectDisplayMethod:(id)arg1;
- (void)handleCandidateSelected:(id)arg1 candidateController:(id)arg2;
- (void)handleCandidateSelectionChanged:(id)arg1 candidateController:(id)arg2;
- (id)candidateDataForDisplayMethod:(id)arg1 candidateController:(id)arg2;
@property(readonly, nonatomic) NSString *selectedDisplayMethod;
@property(readonly, nonatomic) BOOL isVerticalLayout;
@property(readonly, nonatomic) NSArray *displayMethods;
- (void)dealloc;
@property(readonly, nonatomic) IMKCandidateController *secondaryCandidateController;
- (void)invalidateClientSideInfoCache;
- (Class)touchBarControllerClass;
@property(readonly, nonatomic) Class onscreenCandidateWindowClass;
@property(readonly, nonatomic) Class auxiliaryCandidateWindowClass;
- (void)deactivateServer:(id)arg1;
- (void)activateServer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

