//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <MediaPlayer/MPAVQueueController-Protocol.h>
#import <MediaPlayer/MPQueueFeederDelegate-Protocol.h>

@class MPAVItem, MPQueueFeeder, NSString;
@protocol MPAVPlaylistManagerDelegate, MPAVQueueCoordinating;

@interface MPAVPlaylistManager : NSObject <MPQueueFeederDelegate, MPAVQueueController>
{
    BOOL _goToTargetIndex;
    long long _lastSelectionDirection;
    MPQueueFeeder *_playlistFeeder;
    long long _targetIndex;
    BOOL _allowsQueueModifications;
    BOOL _userCanChangeShuffleAndRepeatType;
    MPAVItem *_currentItem;
    id <MPAVQueueCoordinating> _queueCoordinator;
    long long _repeatType;
    long long _shuffleType;
    unsigned long long _supportedInsertionPositions;
    id <MPAVPlaylistManagerDelegate> _delegate;
}

@property(readonly, nonatomic) MPQueueFeeder *playlistFeeder; // @synthesize playlistFeeder=_playlistFeeder;
@property(nonatomic) __weak id <MPAVPlaylistManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) BOOL userCanChangeShuffleAndRepeatType; // @synthesize userCanChangeShuffleAndRepeatType=_userCanChangeShuffleAndRepeatType;
@property(readonly, nonatomic) unsigned long long supportedInsertionPositions; // @synthesize supportedInsertionPositions=_supportedInsertionPositions;
@property(nonatomic) long long shuffleType; // @synthesize shuffleType=_shuffleType;
@property(nonatomic) long long repeatType; // @synthesize repeatType=_repeatType;
@property(retain, nonatomic) id <MPAVQueueCoordinating> queueCoordinator; // @synthesize queueCoordinator=_queueCoordinator;
@property(readonly, nonatomic) MPAVItem *currentItem; // @synthesize currentItem=_currentItem;
@property(nonatomic) BOOL allowsQueueModifications; // @synthesize allowsQueueModifications=_allowsQueueModifications;
- (void).cxx_destruct;
- (unsigned long long)_playbackIndexForDelta:(long long)arg1 fromIndex:(unsigned long long)arg2 ignoreElapsedTime:(BOOL)arg3 totalItemCount:(unsigned long long)arg4 didReachEnd:(char *)arg5;
- (void)_notifyQueueFeederContentsChanged;
- (void)_applyVolumeNormalizationForQueuedItems;
- (void)queueCoordinatorDidChangeItems:(id)arg1;
- (id)queueCoordinator:(id)arg1 itemToFollowItem:(id)arg2;
- (id)_itemToFollowItemIndex:(long long)arg1 skipUnavailableContent:(BOOL)arg2;
- (long long)_nextItemIndex:(long long)arg1;
- (void)_reloadQueuedItemsIfPathBecameAvailable;
- (BOOL)setPlaylistFeeder:(id)arg1 startIndex:(long long)arg2 keepPlaying:(BOOL)arg3;
- (void)updateLocationDependentPropertiesForItem:(id)arg1;
- (void)finalizeStateRestorationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)canSkipItem:(id)arg1;
- (void)removeAllItemsAfterContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 jumpToIt:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addPlaybackContext:(id)arg1 afterContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)jumpToFirstContentItem;
- (void)jumpToContentItemID:(id)arg1;
- (id)contentItemIDWithCurrentItemOffset:(long long)arg1 mode:(long long)arg2 didReachEnd:(char *)arg3;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long currentIndex;
- (void)setCurrentIndex:(long long)arg1 selectionDirection:(long long)arg2;
- (void)reloadItemsKeepingCurrentItem:(BOOL)arg1;
- (long long)_prepareToQueuePlaybackIndex:(long long)arg1 selectionDirection:(long long)arg2;
- (long long)playlistIndexOfIndex:(long long)arg1 inPlaylistFeeder:(id)arg2;
- (id)playlistFeederForPlaylistIndex:(long long)arg1;
- (unsigned long long)indexForContentItemID:(id)arg1;
- (BOOL)isPlaceholderItemForContentItemID:(id)arg1;
- (id)itemForContentItemID:(id)arg1;
- (id)itemForPlaylistIndex:(long long)arg1;
- (void)handlePlaybackFailureForItem:(id)arg1;
- (unsigned long long)displayIndexForItem:(id)arg1;
- (unsigned long long)displayCountForItem:(id)arg1;
- (long long)indexWithDelta:(long long)arg1 fromIndex:(long long)arg2 ignoreElapsedTime:(BOOL)arg3 didReachEnd:(char *)arg4;
@property(readonly, nonatomic) BOOL hasUserMutations;
- (void)queueFeederDidInvalidateAssets:(id)arg1;
- (void)queueFeederDidReplaceItem:(id)arg1;
- (void)queueFeeder:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2;
- (void)queueFeeder:(id)arg1 didChangeContentsWithPreferredStartIndex:(unsigned long long)arg2 error:(id)arg3;
- (void)queueCoordinator:(id)arg1 willInsertItem:(id)arg2 afterItem:(id)arg3;
- (void)queueCoordinator:(id)arg1 failedToLoadItem:(id)arg2;
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1;
- (void)reset;
- (void)player:(id)arg1 currentItemDidChangeFromItem:(id)arg2 toItem:(id)arg3;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

