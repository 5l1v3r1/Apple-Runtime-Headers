//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct HttpRequestCallbackHandler;

struct HttpResponse;

struct SessionTaskContext;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct map<unsigned long, std::__1::shared_ptr<SessionTaskContext>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<SessionTaskContext>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<SessionTaskContext>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<SessionTaskContext>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<SessionTaskContext>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<SessionTaskContext>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<SessionTaskContext>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<SessionTaskContext> {
    struct SessionTaskContext *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ctu::Http::HttpRequestCallbackHandler> {
    struct HttpRequestCallbackHandler *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ctu::Http::HttpResponse> {
    struct HttpResponse *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<ctu::Http::HttpRequestCallbackHandler> {
    struct HttpRequestCallbackHandler *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<SessionTaskContext> {
    struct SessionTaskContext *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_adb8dc16;

typedef struct shared_ptr<ctu::Http::HttpRequestCallbackHandler> {
    struct HttpRequestCallbackHandler *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a78ecf14;

