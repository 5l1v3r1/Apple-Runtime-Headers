//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <MTLCapture/CaptureMTLObject-Protocol.h>
#import <MTLCapture/MTLPipelineLibrarySPI-Protocol.h>

@class CaptureMTLDevice, NSArray, NSString;
@protocol MTLDevice, MTLPipelineCache, MTLPipelineLibrary, MTLPipelineLibrarySPI;

@interface CaptureMTLPipelineLibrary : NSObject <MTLPipelineLibrarySPI, CaptureMTLObject>
{
    id <MTLPipelineLibrarySPI> _baseObject;
    CaptureMTLDevice *_captureDevice;
    struct GTTraceContext *_traceContext;
    struct GTTraceStream *_traceStream;
}

- (void).cxx_destruct;
@property(readonly) NSArray *pipelineNames;
@property(readonly, nonatomic) id <MTLPipelineCache> pipelineCache;
@property(copy) NSString *label;
@property(readonly, nonatomic) id <MTLPipelineCache> functionCache;
@property BOOL disableRunTimeCompilation;
@property(readonly) id <MTLDevice> device;
- (BOOL)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (id)forwardingTargetForSelector:(SEL)arg1;
@property(readonly) unsigned long long streamReference;
@property(readonly) struct GTTraceStream *traceStream;
@property(readonly) struct GTTraceContext *traceContext;
- (void)touch;
- (id)newRenderPipelineStateWithName:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newRenderPipelineDescriptorWithName:(id)arg1 error:(id *)arg2;
- (id)newComputePipelineStateWithName:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newComputePipelineDescriptorWithName:(id)arg1 error:(id *)arg2;
- (void)dealloc;
@property(readonly) id <MTLPipelineLibrary> baseObject;
- (id)initWithBaseObject:(id)arg1 captureContext:(struct GTTraceContext *)arg2 captureDevice:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

