//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface QCPixelFormat : NSObject
{
    void *_unused[4];
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultClosestPixelFormat:(id)arg1 withColorSpace:(struct CGColorSpace *)arg2;
+ (id)pixelFormatWithName:(id)arg1;
+ (id)findPixelFormat:(id)arg1 withColorSpace:(struct CGColorSpace *)arg2 closestToFormats:(id)arg3;
+ (id)pixelFormatsWithCompatibilities:(unsigned long long)arg1 pixelColorModel:(int)arg2 pixelAlpha:(int)arg3 pixelType:(int)arg4;
+ (id)pixelFormatsWithCompatibility:(unsigned long long)arg1;
+ (id)allPixelFormats;
+ (void)registerPixelFormat:(id)arg1;
+ (id)pixelFormatRGB8;
+ (id)pixelFormatRGB16;
+ (id)pixelFormatRGBh;
+ (id)pixelFormatRGBf;
+ (id)pixelFormatXRGB8;
+ (id)pixelFormatBGRX8;
+ (id)pixelFormatRGBX8;
+ (id)pixelFormatARGB8;
+ (id)pixelFormatBGRA8;
+ (id)pixelFormatRGBA8;
+ (id)pixelFormatRGBA16;
+ (id)pixelFormatRGBAh;
+ (id)pixelFormatRGBAf;
+ (id)pixelFormatI8;
+ (id)pixelFormatI16;
+ (id)pixelFormatIh;
+ (id)pixelFormatIf;
+ (id)pixelFormatCMYK8;
+ (id)pixelFormatKYMC8;
+ (id)pixelFormatCMYK16;
+ (id)pixelFormatCMYKf;
+ (id)pixelFormat422YpCbCr8_601;
+ (id)pixelFormat422YpCbCr8_709;
+ (id)pixelFormatYUVS;
+ (id)pixelFormatM_I8;
+ (id)pixelFormatM_I16;
+ (id)pixelFormatM_Ih;
+ (id)pixelFormatM_If;
+ (id)pixelFormatsForElementSize:(unsigned long long)arg1 type:(int)arg2;
- (id)description;
- (BOOL)isSupportedOnContext:(id)arg1;
- (BOOL)isValidColorSpace:(struct CGColorSpace *)arg1;
- (struct CGColorSpace *)defaultColorSpace;
- (unsigned int)CGBitmapInfo;
- (unsigned long long)CGBitsPerPixel;
- (unsigned long long)CGBitsPerComponent;
- (struct _cl_image_format)CLFormat;
- (int)CIFormat;
- (unsigned int)openGLPixelType;
- (unsigned int)openGLPixelFormat;
- (unsigned int)openGLInternalFormat;
- (unsigned int)QTPixelFormat;
- (unsigned long long)bitsPerBlock;
- (unsigned long long)pixelBlockHeight;
- (unsigned long long)pixelBlockWidth;
- (int)pixelAlpha;
- (int)pixelType;
- (int)pixelColorModel;
- (unsigned long long)compatibilities;
- (id)name;
- (unsigned long long)pixelSamples;
- (id)closestPixelFormat:(id)arg1 outDifference:(double *)arg2;
- (double)compareWithPixelFormat:(id)arg1;
- (unsigned long long)optimalBytesPerRowForWidth:(unsigned long long)arg1;
- (unsigned long long)packedBytesPerRowForWidth:(unsigned long long)arg1;
- (struct CGRect)validateBounds:(struct CGRect)arg1;
- (BOOL)areValidBounds:(struct CGRect)arg1;
- (BOOL)isValidHeight:(unsigned long long)arg1;
- (BOOL)isValidWidth:(unsigned long long)arg1;
- (BOOL)hasCompatibility:(unsigned long long)arg1;
- (unsigned long long)elementSize;
- (int)type;

@end

