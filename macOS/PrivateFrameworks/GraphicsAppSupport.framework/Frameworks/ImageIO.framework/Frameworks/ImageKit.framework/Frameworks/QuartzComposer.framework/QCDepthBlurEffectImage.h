//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzComposer/QCPatch.h>

@class CIFilter, CIImage, NSData, NSNumber, QCBooleanPort, QCImage, QCImagePort, QCIndexPort, QCNumberPort;

__attribute__((visibility("hidden")))
@interface QCDepthBlurEffectImage : QCPatch
{
    QCNumberPort *inputAperture;
    QCBooleanPort *inputNormalizeDisparity;
    QCNumberPort *inputScale;
    QCIndexPort *inputDraftMode;
    QCImagePort *outputImage;
    QCImagePort *outputMainImage;
    QCImagePort *outputDisparityImage;
    QCImagePort *outputAlphaMatteImage;
    CIImage *_disparityCI;
    CIImage *_mainImageCI;
    CIImage *_alphaCI;
    QCImage *_disparity;
    QCImage *_disparityNormalized;
    CIFilter *_cachedFilter;
    CIFilter *_cachedBlurmapFilter;
    NSData *_data;
    unsigned int _orientation;
    BOOL _createdPorts;
    NSNumber *_minValue;
    NSNumber *_maxValue;
}

+ (id)stateKeysWithIdentifier:(id)arg1;
+ (id)serializedStateKeysWithIdentifier:(id)arg1;
+ (BOOL)allowsSubpatchesWithIdentifier:(id)arg1;
+ (BOOL)isSafe;
@property(retain) NSNumber *_maxValue; // @synthesize _maxValue;
@property(retain) NSNumber *_minValue; // @synthesize _minValue;
@property(retain) CIFilter *_cachedBlurmapFilter; // @synthesize _cachedBlurmapFilter;
@property(retain) CIFilter *_cachedFilter; // @synthesize _cachedFilter;
@property(retain) CIImage *_mainImageCI; // @synthesize _mainImageCI;
@property(retain) CIImage *_alphaCI; // @synthesize _alphaCI;
@property(retain) QCImage *_disparityNormalized; // @synthesize _disparityNormalized;
@property(retain) QCImage *_disparity; // @synthesize _disparity;
@property(retain) CIImage *_disparityCI; // @synthesize _disparityCI;
@property(retain) NSData *_data; // @synthesize _data;
- (BOOL)execute:(id)arg1 time:(double)arg2 arguments:(id)arg3;
- (void)updateBlurmap;
- (void)createBlurmapPort;
- (void)createPorts:(id)arg1;
- (BOOL)_createImagesFromDataForContext:(id)arg1;
- (void)createNormalizedDisparity;
- (void)calculateDisparityMinMaxUsingContext:(id)arg1;
- (id)renormalize01;
- (BOOL)setup:(id)arg1;
- (BOOL)setState:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)state;
- (id)metadataAsData:(id)arg1;
- (void)dealloc;
- (BOOL)setPath:(id)arg1;
- (void)setPortsAndCreateFilterFromData:(id)arg1 context:(id)arg2 savedMetadata:(struct CGImageMetadata *)arg3;
- (void)setApertureBasedOnSlider:(id)arg1;
- (void)setApertureBasedOnFilter:(id)arg1;
- (void)setCIImage:(id)arg1 onPort:(id)arg2 orientation:(int)arg3;
- (int)orientationFromImage:(id)arg1;

@end

