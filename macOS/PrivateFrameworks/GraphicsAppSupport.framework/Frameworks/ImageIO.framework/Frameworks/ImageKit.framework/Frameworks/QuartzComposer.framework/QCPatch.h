//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzComposer/GFGraph.h>

@class QCBooleanPort, QCNumberPort, QCPatchRenderingInfo, QCRenderState, QCRenderingManager;

@interface QCPatch : GFGraph
{
    QCPatchRenderingInfo *_renderingInfo;
    QCRenderState *_renderState;
    int _executionMode;
    QCRenderingManager *_renderingManager;
    struct _QCPatchExecutionInfo *_executionInfo;
    unsigned long long _executionFlags;
    int _timebase;
    QCBooleanPort *_enableInput;
    QCNumberPort *_timeInput;
    BOOL _enabled;
    unsigned long long _activeCount;
    void *_observationInfo;
    id _proExtension;
    double _unused31[2];
    unsigned long long _unused32[1];
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
+ (id)instantiateWithFile:(id)arg1;
+ (BOOL)canInstantiateWithFile:(id)arg1;
+ (Class)inspectorClassWithIdentifier:(id)arg1;
+ (id)inspectorNibNameWithIdentifier:(id)arg1;
+ (id)_keyFromName:(id)arg1;
+ (Class)_listClass;
+ (Class)connectionClass;
+ (Class)proxyPortClass;
+ (Class)baseClass;
+ (Class)nodeClassDescriptionClass;
+ (BOOL)shouldLoadAttributes;
+ (id)validateResourceURL:(id)arg1 withOptions:(id)arg2;
+ (BOOL)usesLocalContextForIdentifier:(id)arg1;
+ (id)serializedStateKeysWithIdentifier:(id)arg1;
+ (id)stateArrays;
+ (id)cachedStateArrays;
+ (id)stateKeysWithIdentifier:(id)arg1;
+ (BOOL)supportsOptimizedExecutionForIdentifier:(id)arg1;
+ (int)timeModeWithIdentifier:(id)arg1;
+ (BOOL)allowsSubpatchesWithIdentifier:(id)arg1;
+ (int)executionModeWithIdentifier:(id)arg1;
+ (BOOL)isSafe;
+ (BOOL)setShouldLoadAttributes:(BOOL)arg1;
+ (void)loadPlugInsInLibrary:(id)arg1;
+ (void)loadPlugInsInFolder:(id)arg1;
+ (void)loadPlugInAtPath:(id)arg1;
+ (void)registerPatch:(id)arg1 withName:(id)arg2;
+ (id)patchAttributesWithName:(id)arg1;
+ (id)createPatchWithName:(id)arg1;
+ (id)patchWithName:(id)arg1;
+ (id)patchNames;
+ (id)patchManager;
+ (id)_privateAttributesWithIdentifier:(id)arg1;
+ (id)_publicAttributesWithIdentifier:(id)arg1;
+ (BOOL)getMatrixFrom:(id)arg1 toPatch:(id)arg2 matrix:(double *)arg3 ignoreWithin:(id)arg4 includeFromTransform:(_Bool)arg5;
+ (Class)inspectorClassWithIdentifier:(id)arg1;
+ (id)inspectorNibNameWithIdentifier:(id)arg1;
- (void)applyFunctionOnSubpatches:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 recursive:(BOOL)arg3;
- (id)systemOutputPorts;
- (id)systemInputPorts;
- (id)customOutputPorts;
- (id)customInputPorts;
- (int)timebase;
- (void)setTimebase:(int)arg1;
- (unsigned long long)orderForConsumerSubpatch:(id)arg1;
- (void)setOrder:(unsigned long long)arg1 forConsumerSubpatch:(id)arg2;
- (id)consumerSubpatches;
- (id)selectedNodes;
- (void)_setKey:(id)arg1 forPort:(id)arg2;
- (void)_setIndex:(id)arg1 forPort:(id)arg2;
- (void)__setValue:(id)arg1 forPortKey:(id)arg2;
- (Class)graphViewClass;
- (id)nodeActorForView:(id)arg1;
- (id)isPortPublished:(id)arg1;
- (void)unpublishPort:(id)arg1;
- (id)publishPort:(id)arg1;
- (BOOL)canPublishPort:(id)arg1;
- (id)subpatchForPath:(id)arg1;
- (id)pathForSubpatch:(id)arg1;
- (id)keyForSubpatch:(id)arg1;
- (id)subpatchForKey:(id)arg1;
- (void)removeSubpatch:(id)arg1;
- (BOOL)addSubpatch:(id)arg1;
- (BOOL)canAddSubpatch:(id)arg1;
- (id)subpatches;
- (id)parentPatch;
- (void)deleteOutputForKey:(id)arg1;
- (void)deleteInputForKey:(id)arg1;
- (void)setOutputOrder:(unsigned long long)arg1 forKey:(id)arg2;
- (id)createOutputWithPortClass:(Class)arg1 forKey:(id)arg2 attributes:(id)arg3 arguments:(id)arg4 order:(unsigned long long)arg5;
- (id)createOutputWithPortClass:(Class)arg1 forKey:(id)arg2 attributes:(id)arg3;
- (void)setInputOrder:(unsigned long long)arg1 forKey:(id)arg2;
- (id)createInputWithPortClass:(Class)arg1 forKey:(id)arg2 attributes:(id)arg3 arguments:(id)arg4 order:(unsigned long long)arg5;
- (id)createInputWithPortClass:(Class)arg1 forKey:(id)arg2 attributes:(id)arg3;
- (id)outputs;
- (id)inputs;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
- (void)setOutputPortOrder:(unsigned long long)arg1 forKey:(id)arg2;
- (void)setInputPortOrder:(unsigned long long)arg1 forKey:(id)arg2;
- (id)proxyPortForOriginalPort:(id)arg1;
- (id)customOutputPorts;
- (id)customInputPorts;
- (id)valueForKey:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (int)directionForPort:(id)arg1;
- (void)deleteOutputPortForKey:(id)arg1;
- (void)deleteInputPortForKey:(id)arg1;
- (void)deleteProxyPortForKey:(id)arg1;
- (id)createProxyPortWithOriginalPort:(id)arg1 forKey:(id)arg2;
- (void)deleteConnectionForKey:(id)arg1;
- (id)createConnectionFromPort:(id)arg1 toPort:(id)arg2 forKey:(id)arg3;
- (BOOL)canCreateConnectionFromPort:(id)arg1 toPort:(id)arg2;
- (void)removeNodeForKey:(id)arg1;
- (void)nodeDidAddToGraph:(id)arg1;
- (BOOL)addNode:(id)arg1 forKey:(id)arg2;
- (BOOL)canAddNode:(id)arg1;
- (id)createOutputPortWithArguments:(id)arg1 forKey:(id)arg2;
- (id)createInputPortWithArguments:(id)arg1 forKey:(id)arg2;
- (void)stateUpdated;
- (BOOL)setState:(id)arg1;
- (id)state;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)initWithIdentifier:(id)arg1;
- (void)_logMessage:(id)arg1;
- (id)_baseKey;
- (void)endLocalContext;
- (BOOL)beginLocalContext;
- (void)_drawDirtyRect;
- (void)setCustomizedName:(id)arg1;
- (BOOL)shouldAbortExecution;
- (BOOL)debuggingMode;
- (BOOL)executeSubpatches:(double)arg1 arguments:(id)arg2;
- (void)setForceInputsUpdate;
- (void)setNeedsExecution;
- (void)updateTimebase:(int)arg1;
- (id)safeURLFromString:(id)arg1;
- (id)safeURLFromURL:(id)arg1;
- (id)dataWithContentsOfURL:(id)arg1 error:(id *)arg2;
- (BOOL)inSafeMode;
- (void)invalidateDodForSubpatches;
- (void)setSerializedValue:(id)arg1 forStateKey:(id)arg2;
- (id)serializedValueForStateKey:(id)arg1;
- (void)cleanup:(id)arg1;
- (void)disable:(id)arg1;
- (BOOL)execute:(id)arg1 time:(double)arg2 arguments:(id)arg3;
- (double)nextExecutionTimeForSubpatches:(id)arg1 time:(double)arg2 arguments:(id)arg3;
- (double)nextExecutionTime:(id)arg1 time:(double)arg2 arguments:(id)arg3;
- (void)enable:(id)arg1;
- (BOOL)setup:(id)arg1;
- (void)receiveMessage:(id)arg1 name:(id)arg2 attributes:(id)arg3;
- (id)findSubpatchesWithName:(id)arg1 options:(unsigned long long)arg2;
- (void)_invalidateDodForSubpatches;
- (int)_executionFlags;
- (void)_cleanup;
- (void)_disable;
- (void)_deactivate;
- (BOOL)_execute:(double)arg1 arguments:(id)arg2;
- (BOOL)__execute:(double)arg1 arguments:(id)arg2;
- (void)_QCArrayResetSize:(id)arg1 newSize:(unsigned long long)arg2;
- (BOOL)_renderAtTime:(double)arg1 arguments:(id)arg2;
- (double)_nextExecutionTime:(double)arg1 arguments:(id)arg2;
- (BOOL)_executeSubpatches:(double)arg1 arguments:(id)arg2;
- (void)_activate;
- (void)_enable;
- (BOOL)_setup:(id)arg1 state:(id)arg2;
- (void)_forwardRenderingFlag;
- (void)_resetExecution;
- (void)_resetExecutionFlags;
- (double)_nextExecutionTime;
- (unsigned long long)_activeCount;
- (BOOL)_enabled;
- (void)_invalidateTimeMode;
- (BOOL)__isPatchInUse:(id)arg1;
- (void)_invalidateExecutionMode;
- (int)_checkExecutionMode;
- (id)_enableInput;
- (int)_executionMode;
- (id)_renderState;
- (id)_renderingInfo;
- (id)performanceCounters;
- (void)setDouble:(double)arg1 forStateKey:(id)arg2;
- (double)doubleForStateKey:(id)arg1;
- (void)setInteger:(long long)arg1 forStateKey:(id)arg2;
- (long long)integerForStateKey:(id)arg1;
- (void)setBool:(BOOL)arg1 forStateKey:(id)arg2;
- (BOOL)boolForStateKey:(id)arg1;
- (void)setValue:(id)arg1 forStateKey:(id)arg2;
- (id)valueForStateKey:(id)arg1;
- (BOOL)isStateKey:(id)arg1;
- (int)renderingFlags;
- (void)setRenderingFlags:(int)arg1;
- (id)renderingContext;
- (BOOL)isRendering;
- (BOOL)isPausedRendering;
- (void)stopRendering;
- (void)resumeRendering;
- (BOOL)render:(double)arg1 arguments:(id)arg2;
- (double)nextExecutionTime:(double)arg1 arguments:(id)arg2;
- (void)pauseRendering;
- (BOOL)startRendering:(id)arg1 options:(id)arg2;
- (BOOL)isExecutionSuspended;
- (void)resumeExecution;
- (void)suspendExecution;
- (void)abortExecution;
- (BOOL)prerenderAtTime:(double)arg1 imageSizeHint:(struct CGSize)arg2 arguments:(id)arg3;
- (BOOL)getMatrix:(double *)arg1;
- (id)getNthInputPort:(unsigned int)arg1;
- (unsigned long long)getNumberOfInputPorts;
- (id)getNthInputImagePort:(unsigned int)arg1;
- (unsigned long long)getNumberOfInputImagePorts;
- (BOOL)patchIsInMacro:(id)arg1;
- (void)setPatchSetsTransform:(BOOL)arg1;
- (BOOL)patchSetsTransform;
- (double *)getTransform;
- (CDStruct_bdcb2b0d)md5WithTime:(double)arg1 arguments:(id)arg2;
- (BOOL)checkForGLError;

@end

