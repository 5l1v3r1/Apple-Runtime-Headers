//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <QuartzComposer/QCCompositionRenderer-Protocol.h>

@interface QCRenderer : NSObject <QCCompositionRenderer>
{
    void *_QCRendererPrivate;
}

+ (void)_unregisterUniqueContext:(id)arg1;
+ (id)_createAndRegisterUniqueContextForCGLContext:(struct _CGLContextObject *)arg1 contextOwner:(id)arg2 pixelFormat:(struct _CGLPixelFormatObject *)arg3 formatOwner:(id)arg4 colorSpace:(struct CGColorSpace *)arg5 options:(id)arg6;
+ (id)defaultRenderingOptions;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
- (id)userInfo;
- (id)patch;
- (id)renderingContext;
- (void)setInputValuesWithPropertyList:(id)arg1;
- (id)propertyListFromInputValues;
- (id)valueForOutputKey:(id)arg1 ofType:(id)arg2;
- (id)valueForOutputKey:(id)arg1;
- (id)valueForInputKey:(id)arg1 ofType:(id)arg2;
- (id)valueForInputKey:(id)arg1;
- (BOOL)setValue:(id)arg1 forInputKey:(id)arg2;
- (id)outputKeys;
- (id)inputKeys;
- (id)attributes;
- (id)createSnapshotImageOfType:(id)arg1;
- (id)snapshotImage;
- (BOOL)renderAtTime:(double)arg1 arguments:(id)arg2;
- (double)nextRecommendedRenderingTimeForTime:(double)arg1 arguments:(id)arg2;
- (double)renderingTimeForTime:(double)arg1 arguments:(id)arg2;
- (void)dealloc;
- (void)finalize;
- (id)composition;
- (id)initOffScreenWithSize:(struct CGSize)arg1 colorSpace:(struct CGColorSpace *)arg2 composition:(id)arg3;
- (id)initWithCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 colorSpace:(struct CGColorSpace *)arg3 composition:(id)arg4;
- (id)initWithOpenGLContext:(id)arg1 pixelFormat:(id)arg2 file:(id)arg3;
- (id)initWithComposition:(id)arg1 colorSpace:(struct CGColorSpace *)arg2;
- (id)initWithCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 colorSpace:(struct CGColorSpace *)arg3 patch:(id)arg4;
- (id)initOffScreenWithPixelFormat:(id)arg1 size:(struct CGSize)arg2 colorSpace:(struct CGColorSpace *)arg3 patch:(id)arg4;
- (id)init;
- (id)initWithRenderingContext:(id)arg1 patch:(id)arg2;
- (BOOL)prerenderAtTime:(double)arg1 imageSizeHint:(struct CGSize)arg2 arguments:(id)arg3;

@end

