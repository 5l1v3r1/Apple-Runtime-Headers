//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzCore/CATiledLayer.h>

@class CAKeyframeAnimation, CALayer, IKComposer, IKImageView, IKKnobLayer, NSClipView, NSDictionary, NSScrollView, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface IKImageLayer : CATiledLayer
{
    NSURL *_url;
    struct CGImage *_cgImageRef;
    struct CGImage *_cachedImage;
    struct CGSize _cachedImageSize;
    struct CGAffineTransform _cachedCTM;
    struct CGImageSource *_isr;
    NSDictionary *_imageProperties;
    BOOL _animateTransition;
    CALayer *_backgroundLayer;
    IKComposer *_composer;
    int _orientationTag;
    unsigned long long _imageIndex;
    struct CGSize _dpi;
    double _userSpaceScaleFactor;
    CAKeyframeAnimation *_gifAnimation;
    NSScrollView *_ikScrollView;
    NSClipView *_ikClipView;
    IKImageView *_ikImageView;
    IKKnobLayer *_ikKnobLayer;
    struct CGPoint _eventMouseDownLocation;
    double _imageScalingX;
    double _imageScalingY;
    struct CGPoint _imageScalingUserScaled;
    double _imageRotation;
    BOOL _nonSquarePixels;
    double _nonSquareWidthFactor;
    double _nonSquareHeightFactor;
    BOOL _canAnimateImage;
    BOOL _isAnimatingImage;
    BOOL _closingDown;
    BOOL _supportsSubsampling;
    BOOL _badImage;
    BOOL _handlingBoundsChanged;
    BOOL _waitingForResetAnchorPoint;
    struct CGSize _originalImageSize;
    struct CGRect _startBoundsRect;
    struct CGAffineTransform _imageTransform;
    struct _opaque_pthread_mutex_t _imageLayerLock;
    BOOL _userDefaultsOverwriteMagnificationFilter;
    BOOL _userDefaultsOverwriteMinificationFilter;
    NSString *_magnificationFilterName;
    NSString *_minificationFilterName;
}

+ (double)fadeDuration;
+ (BOOL)registerLayerWithView:(id)arg1;
@property(readonly) struct CGImage *cachedImage; // @synthesize cachedImage=_cachedImage;
@property(copy) NSString *minificationFilterName; // @synthesize minificationFilterName=_minificationFilterName;
@property(copy) NSString *magnificationFilterName; // @synthesize magnificationFilterName=_magnificationFilterName;
@property BOOL userDefaultsOverwriteMinificationFilter; // @synthesize userDefaultsOverwriteMinificationFilter=_userDefaultsOverwriteMinificationFilter;
@property BOOL userDefaultsOverwriteMagnificationFilter; // @synthesize userDefaultsOverwriteMagnificationFilter=_userDefaultsOverwriteMagnificationFilter;
@property double nonSquareWidthFactor; // @synthesize nonSquareWidthFactor=_nonSquareWidthFactor;
@property double nonSquareHeightFactor; // @synthesize nonSquareHeightFactor=_nonSquareHeightFactor;
@property BOOL nonSquarePixels; // @synthesize nonSquarePixels=_nonSquarePixels;
@property BOOL isBadImage; // @synthesize isBadImage=_badImage;
@property BOOL isAnimatingImage; // @synthesize isAnimatingImage=_isAnimatingImage;
@property BOOL canAnimateImage; // @synthesize canAnimateImage=_canAnimateImage;
@property double imageRotation; // @synthesize imageRotation=_imageRotation;
@property struct CGPoint imageScalingUserScaled; // @synthesize imageScalingUserScaled=_imageScalingUserScaled;
@property(nonatomic) double imageScalingY; // @synthesize imageScalingY=_imageScalingY;
@property(nonatomic) double imageScalingX; // @synthesize imageScalingX=_imageScalingX;
- (BOOL)animates;
- (void)setAnimates:(BOOL)arg1;
- (void)setKnobLayer:(id)arg1;
- (void)scrollToRect:(struct CGRect)arg1;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (void)rotateImageRight:(id)arg1;
- (void)rotateImageLeft:(id)arg1;
- (void)flipImageVertical:(id)arg1;
- (void)flipImageHorizontal:(id)arg1;
- (void)updateOrientationTag:(int)arg1 animate:(BOOL)arg2 reCenter:(BOOL)arg3;
@property int orientationTag; // @synthesize orientationTag=_orientationTag;
- (void)ikMouseUp:(id)arg1;
- (void)ikMouseDragged:(id)arg1;
- (void)ikMouseDown:(id)arg1;
- (struct CGRect)limitRect;
- (void)setRotationAngle:(double)arg1 centerPoint:(struct CGPoint)arg2;
- (void)setRotationAngle:(double)arg1;
- (void)setRotation:(id)arg1;
- (double)rotationAngle;
- (void)centerImage;
- (void)clipViewBoundsChanged:(id)arg1;
- (void)updateImageLayer;
- (void)setImageZoomFactor:(double)arg1 centerPoint:(struct CGPoint)arg2;
- (void)zoomImageToRect:(struct CGRect)arg1;
- (void)zoomImageToFit:(id)arg1;
- (void)zoomActualSize:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)setScalingFactorX:(double)arg1 factorY:(double)arg2;
- (void)setScalingFactorX:(double)arg1 factorY:(double)arg2 visibleCenter:(struct CGPoint)arg3;
- (void)resetAnchorPoint:(struct CGPoint)arg1;
- (void)updateClipViewBounds:(struct CGRect)arg1 forVisibleCenter:(struct CGPoint)arg2;
- (void)setVisibleCenterPoint:(struct CGPoint)arg1;
- (struct CGPoint)visibleCenterPoint;
- (void)setAnchorPointAndKeepFrame:(struct CGPoint)arg1;
- (void)autoResizeToRect:(struct CGRect)arg1 allowZoomIn:(BOOL)arg2;
- (struct CGSize)transformedOriginalImageSize;
- (struct CGSize)transformedScaledImageSize;
@property struct CGSize originalImageSize; // @synthesize originalImageSize=_originalImageSize;
- (struct CGSize)nonAutorotatedOriginalImageSize;
- (double)scalingFactor;
- (void)renderWithRotationsInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)renderInContext:(struct CGContext *)arg1;
- (id)imageProperties;
- (void)releaseCGImage;
- (struct CGImage *)cgImage;
- (void)setImage:(struct CGImage *)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4;
- (void)doSetImage:(struct CGImage *)arg1 imageProperties:(id)arg2 imageState:(id)arg3 options:(id)arg4;
- (void)replaceImage:(struct CGImage *)arg1 imageProperties:(id)arg2 imageState:(id)arg3;
- (void)saveState:(id)arg1;
- (void)drawCachedImageInContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)invalidateCachedCTM;
- (void)dumpCTM:(struct CGAffineTransform)arg1;
- (void)setImageWithURL:(id)arg1 imageState:(id)arg2 options:(id)arg3;
- (id)getMinificationFilter;
- (id)getMagnificationFilter;
- (BOOL)shouldCacheFullSizeImage;
- (void)createThumbnailWidth:(int)arg1 height:(int)arg2 level:(int)arg3;
- (struct CGImage *)createSquarePixelCopy:(struct CGImage *)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3;
- (void)doSetImageWithState:(id)arg1 options:(id)arg2;
- (id)optionsForCGImageSourceCreateImageAtIndex;
- (void)_updateLayer:(id)arg1;
- (id)ciImage;
- (struct CGAffineTransform)rotationTransform;
- (struct CGAffineTransform)transformForOrientationAndDPIWithScaledTranslation;
- (struct CGAffineTransform)transformForOrientationAndDPIWithTranslation;
- (struct CGAffineTransform)transformForOrientationAndDPIWithTranslationForWidth:(float)arg1 height:(float)arg2;
- (struct CGAffineTransform)transformForOrientationAndDPI;
- (struct CGAffineTransform)imageTransform;
- (void)resetTransforms;
- (BOOL)badImage;
- (void)cleanup;
- (void)invalidate;
- (void)dumpGeometry:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (void)setAnchorPoint:(struct CGPoint)arg1;
- (void)ikLayerWasAddedToSuperlayer;
- (void)animateTransition:(id)arg1;
- (void)setup:(id)arg1;
- (void)closingDown;
- (void)finalize;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) double userSpaceScaleFactor; // @synthesize userSpaceScaleFactor=_userSpaceScaleFactor;

@end

