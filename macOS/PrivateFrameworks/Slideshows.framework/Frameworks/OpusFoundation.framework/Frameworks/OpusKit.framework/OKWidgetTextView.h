//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <OpusKit/OKWidgetTextViewProxy.h>

#import <OpusKit/NSTextViewDelegate-Protocol.h>

@class NSAttributedString, NSColor, NSScrollView, NSString, OKWidgetTextViewNSTextView;

@interface OKWidgetTextView : OKWidgetTextViewProxy <NSTextViewDelegate>
{
    NSScrollView *_scrollView;
    OKWidgetTextViewNSTextView *_textView;
    BOOL _scrollEnabled;
    BOOL _highlighted;
    BOOL _usingAttributedText;
    NSAttributedString *_originalText;
    struct CGRect _settingBounds;
    struct CGRect _settingFrame;
    double _highlightBorderWidth;
    BOOL _isUppercase;
    BOOL _isEditable;
    NSString *_text;
    NSAttributedString *_attributedText;
    NSString *_fontName;
    double _fontSize;
    NSColor *_textColor;
    NSColor *_textBackgroundColor;
    unsigned long long _alignment;
    long long _textGravity;
    long long _textVerticalAlignment;
    double _strokeWidth;
    NSColor *_strokeColor;
}

+ (id)supportedSettings;
@property(retain, nonatomic) NSColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) double strokeWidth; // @synthesize strokeWidth=_strokeWidth;
@property(nonatomic) long long textVerticalAlignment; // @synthesize textVerticalAlignment=_textVerticalAlignment;
@property(nonatomic) long long textGravity; // @synthesize textGravity=_textGravity;
@property(nonatomic) BOOL isEditable; // @synthesize isEditable=_isEditable;
@property(nonatomic) BOOL isUppercase; // @synthesize isUppercase=_isUppercase;
@property(nonatomic) unsigned long long alignment; // @synthesize alignment=_alignment;
@property(retain, nonatomic) NSColor *textBackgroundColor; // @synthesize textBackgroundColor=_textBackgroundColor;
@property(retain, nonatomic) NSColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(retain, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void)_layoutViews;
- (id)_composeColor:(id)arg1 withDestinationColor:(id)arg2;
- (struct CGRect)_boundingRectOfText:(id)arg1 withSize:(struct CGSize)arg2;
- (void)_updateSettingsFromAttributes:(id)arg1 andText:(id)arg2;
- (void)_applyTextSettings;
- (void)_setupScrolledViews;
- (void)setHighlighted:(BOOL)arg1;
- (void)setSettingScrollEnabled:(BOOL)arg1;
- (BOOL)settingScrollEnabled;
- (void)setSettingEditable:(BOOL)arg1;
- (BOOL)settingEditable;
- (void)setSettingTextVerticalAlignment:(long long)arg1;
- (long long)settingTextVerticalAlignment;
- (void)setSettingStrokeColor:(id)arg1;
- (id)settingStrokeColor;
- (void)setSettingStrokeWidth:(float)arg1;
- (double)settingStrokeWidth;
- (void)setSettingUppercase:(BOOL)arg1;
- (BOOL)settingUppercase;
- (void)setSettingAttributedText:(id)arg1;
- (id)settingAttributedText;
- (void)setSettingText:(id)arg1;
- (id)settingText;
- (void)setSettingTextAlignment:(unsigned long long)arg1;
- (unsigned long long)settingTextAlignment;
- (void)setSettingTextBackgroundColor:(id)arg1;
- (id)settingTextBackgroundColor;
- (void)setSettingTextColor:(id)arg1;
- (id)settingTextColor;
- (void)setSettingFontSize:(float)arg1;
- (float)settingFontSize;
- (void)setSettingFontName:(id)arg1;
- (id)settingFontName;
- (void)setSettingBorderWidth:(double)arg1;
- (void)setSettingFrame:(struct CGRect)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (struct CGRect)textViewFrame;
- (void)layoutSubviews;
- (id)layoutSettingsKeys;
- (void)dealloc;
- (id)initWithWidget:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

