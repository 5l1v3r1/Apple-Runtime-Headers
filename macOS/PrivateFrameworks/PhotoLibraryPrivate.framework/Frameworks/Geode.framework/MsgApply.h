//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Geode/MsgImageFilter.h>

__attribute__((visibility("hidden")))
@interface MsgApply : MsgImageFilter
{
}

+ (id)identityTilingTo:(id)arg1;
+ (id)multiply:(id)arg1 to:(id)arg2;
+ (id)maskToAlpha:(id)arg1;
+ (id)blendBackground:(id)arg1 withMask:(id)arg2 to:(id)arg3;
+ (id)punchOutCircleIn:(id)arg1 cropToSquare:(BOOL)arg2;
+ (id)combine:(id)arg1 usingWeights:(const float *)arg2 with:(id)arg3 usingWeights:(const float *)arg4;
+ (id)findColdPixels:(id)arg1;
+ (id)findColdPixels:(id)arg1 inSpace:(struct CGColorSpace *)arg2;
+ (id)findHotPixels:(id)arg1 inSpace:(struct CGColorSpace *)arg2;
+ (id)setAlphaFromLuminanceZero:(float)arg1 one:(float)arg2 gamma:(float)arg3 to:(id)arg4;
+ (id)matrix:(const float *)arg1 to:(id)arg2;
+ (id)colorCubeData:(id)arg1 ofDimension:(int)arg2 to:(id)arg3;
+ (id)colorCubeWithNSData:(id)arg1 ofDimension:(int)arg2 to:(id)arg3;
+ (id)colorCubeWithColorSpace:(const float *)arg1 ofDimension:(int)arg2 withColorSpace:(struct CGColorSpace *)arg3 to:(id)arg4;
+ (id)colorCube:(const float *)arg1 ofDimension:(int)arg2 to:(id)arg3;
+ (id)nearestNeighborDownscale:(float)arg1 to:(id)arg2;
+ (id)multPowImage:(id)arg1 multWeighting:(float)arg2 powWeighting:(float)arg3 to:(id)arg4;
+ (id)powImageByFloat:(float)arg1 to:(id)arg2;
+ (id)mixtureWithFloat:(float)arg1 fromZero:(id)arg2 toOne:(id)arg3;
+ (id)multiply:(float)arg1 image:(id)arg2 offset:(float)arg3 to:(id)arg4;
+ (id)combineImages:(float)arg1 imageA:(id)arg2 multB:(float)arg3 imageB:(id)arg4 offset:(float)arg5;
+ (id)setAlpha:(float)arg1 to:(id)arg2;
+ (id)absoluteDiffBetweenImage:(id)arg1 image:(id)arg2;
+ (id)multiplyAndClamp:(float)arg1 Min:(float)arg2 Max:(float)arg3 to:(id)arg4;
+ (id)blackLift:(float)arg1 to:(id)arg2;
+ (id)curve:(const float *)arg1 to:(id)arg2;
+ (id)scale:(float)arg1 to:(id)arg2;
+ (id)translateX:(float)arg1 Y:(float)arg2 to:(id)arg3;
+ (id)areaAverageTo:(id)arg1;
+ (id)cropRect:(struct CGRect)arg1 to:(id)arg2;
+ (id)edgeClampTo:(id)arg1;
+ (id)unsharpMaskRadius:(float)arg1 amount:(float)arg2 to:(id)arg3;
+ (id)bilateralRadius:(float)arg1 edgeDetail:(float)arg2 to:(id)arg3;
+ (id)sobelEdge:(float)arg1 to:(id)arg2;
+ (id)pseudoMedian:(float)arg1 weight:(float)arg2 to:(id)arg3;
+ (id)compositeSourceOver:(id)arg1 to:(id)arg2;
+ (id)boxBlur:(float)arg1 to:(id)arg2;
+ (id)gaussianBlur:(float)arg1 to:(id)arg2;
+ (id)medianTo:(id)arg1;
+ (id)lanczosScale:(float)arg1 to:(id)arg2;
+ (id)mixture:(id)arg1 fromZero:(id)arg2 toOne:(id)arg3;
+ (id)highlightWithMask:(id)arg1 usingColor:(float *)arg2 to:(id)arg3;
+ (id)dotProductWithRedWeight:(float)arg1 greenWeight:(float)arg2 blueWeight:(float)arg3 to:(id)arg4;
+ (id)saturation:(float)arg1 to:(id)arg2;
+ (id)lighten:(float)arg1 to:(id)arg2;
+ (id)darken:(float)arg1 to:(id)arg2;
+ (id)exposureBias:(float)arg1 bias:(float)arg2 to:(id)arg3;
+ (id)exposure:(float)arg1 to:(id)arg2;
+ (id)powImage:(id)arg1 to:(id)arg2;
+ (id)maxNeighborDiff:(id)arg1;
+ (id)kernelArray;
+ (id)filterName;
- (struct CGRect)nnRegionOf:(int)arg1 destRect:(struct CGRect)arg2 userInfo:(id)arg3;
- (struct CGRect)roiOneIs256x1Table:(long long)arg1 destRect:(struct CGRect)arg2;
- (struct CGRect)roi3x3:(long long)arg1 destRect:(struct CGRect)arg2;

@end

