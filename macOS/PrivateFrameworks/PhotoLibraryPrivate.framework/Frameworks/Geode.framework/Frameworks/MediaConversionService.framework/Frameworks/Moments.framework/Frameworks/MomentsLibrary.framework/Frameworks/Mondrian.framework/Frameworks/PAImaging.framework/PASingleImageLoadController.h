//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, PASingleImageLoadControllerSubscription, PATimer, PFStateMachine, RDVersion;
@protocol PAImageRequestService, PAImageResponseInternal, PFCanceler;

@interface PASingleImageLoadController : NSObject
{
    RDVersion *_version;
    id <PAImageRequestService> _imageService;
    NSArray *_subscriptions;
    PFStateMachine *_state;
    PATimer *_timerFromStart;
    PATimer *_imageLoadStepTimer;
    unsigned long long _updateLevel;
    BOOL _active;
    BOOL _recordedDwell;
    unsigned long long _requestedImageSerialNumber;
    id <PFCanceler> _requestedImageCanceler;
    unsigned long long _readyImageSerialNumber;
    id <PAImageResponseInternal> _readyImage;
    PASingleImageLoadControllerSubscription *_currentSubscription;
    NSArray *_notifySubscriptions;
    PATimer *_waitTimer;
}

+ (id)_postMasterLoadQueue;
+ (void)initialize;
@property unsigned long long updateLevel; // @synthesize updateLevel=_updateLevel;
@property(retain) PATimer *waitTimer; // @synthesize waitTimer=_waitTimer;
@property(readonly) PFStateMachine *state; // @synthesize state=_state;
@property(retain) NSArray *notifySubscriptions; // @synthesize notifySubscriptions=_notifySubscriptions;
@property(retain) PASingleImageLoadControllerSubscription *currentSubscription; // @synthesize currentSubscription=_currentSubscription;
@property(retain) NSArray *subscriptions; // @synthesize subscriptions=_subscriptions;
@property(retain) id <PAImageResponseInternal> readyImage; // @synthesize readyImage=_readyImage;
@property unsigned long long readyImageSerialNumber; // @synthesize readyImageSerialNumber=_readyImageSerialNumber;
@property(retain) id <PFCanceler> requestedImageCanceler; // @synthesize requestedImageCanceler=_requestedImageCanceler;
@property(readonly) unsigned long long requestedImageSerialNumber; // @synthesize requestedImageSerialNumber=_requestedImageSerialNumber;
@property(retain, nonatomic) RDVersion *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)description;
- (void)postMasterLoadActions;
- (BOOL)inputAvailable;
- (BOOL)thumbnailAvailable:(struct CGSize)arg1;
- (BOOL)previewAvailable;
- (id)findNextSubscription;
- (void)removeLoadSubscription:(id)arg1;
- (void)_cancelAllLoadSubscriptions;
- (void)addLoadSubscription:(id)arg1;
- (void)updateVersion:(id)arg1;
- (id)synchronousThumbnailWithSize:(struct CGSize)arg1 imageType:(id)arg2;
- (void)commitUpdate;
- (void)beginUpdate;
- (void)cancel;
- (id)previewImageRequestForType:(id)arg1 size:(struct CGSize)arg2;
- (void)deliverReadyImage;
- (BOOL)readyImageFailed;
- (BOOL)requestedImageFailed;
- (void)requestImage;
- (void)_imageIsReady:(id)arg1 imageType:(id)arg2 readyImageSerialNumber:(unsigned long long)arg3;
- (double)waitToLoad:(id)arg1;
- (void)notifyDidLoad;
- (void)notifyDidCancel;
- (void)notifyWillLoad;
- (void)_notify:(int)arg1;
- (void)notifyIdle;
- (void)notifyActive;
- (void)handleEvent:(id)arg1;
- (void)_cancel;
- (void)dealloc;
- (id)initWithVersion:(id)arg1 imageService:(id)arg2;

@end

