//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString, PADisplay, PAImageAsset, PAMultiLevelImage;
@protocol OS_dispatch_queue, PAImageAssetClientDelegate;

@interface PAImageAssetClient : NSObject
{
    NSObject<OS_dispatch_queue> *_stateQueue;
    NSObject<OS_dispatch_queue> *_imageQueue;
    PAMultiLevelImage *_image;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    double _fitScale;
    double _currentScale;
    struct CGRect _currentROI;
    id <PAImageAssetClientDelegate> _delegate;
    PADisplay *_display;
    PAImageAsset *_asset;
    BOOL _wantsBackFillImage;
    BOOL _wantsZoomToFitImage;
    BOOL _wantsFullSizeImage;
    BOOL _wantsZoomImage;
    BOOL _allowsPredictiveRendering;
    BOOL _allowTiling;
    BOOL _isHeld;
    BOOL _offscreen;
    BOOL _hidden;
    BOOL _animating;
    BOOL _isImageValidInCurrentROI;
    int _priority;
    NSString *_name;
    double _targetFrameRate;
}

+ (int)priorityFromCurrentQoS;
+ (int)priorityFromQoS:(unsigned int)arg1;
+ (double)defaultTargetFrameRate;
+ (id)histogramAssetClientWithName:(id)arg1 assetType:(id)arg2 parameters:(id)arg3;
+ (id)assetClientWithName:(id)arg1 assetType:(id)arg2;
@property(readonly) BOOL isImageValidInCurrentROI; // @synthesize isImageValidInCurrentROI=_isImageValidInCurrentROI;
@property double targetFrameRate; // @synthesize targetFrameRate=_targetFrameRate;
@property int priority; // @synthesize priority=_priority;
@property(getter=isAnimating) BOOL animating; // @synthesize animating=_animating;
@property(getter=isHidden) BOOL hidden; // @synthesize hidden=_hidden;
@property(getter=isOffscreen) BOOL offscreen; // @synthesize offscreen=_offscreen;
@property(readonly) BOOL isHeld; // @synthesize isHeld=_isHeld;
@property BOOL allowTiling; // @synthesize allowTiling=_allowTiling;
@property BOOL allowsPredictiveRendering; // @synthesize allowsPredictiveRendering=_allowsPredictiveRendering;
@property BOOL wantsZoomImage; // @synthesize wantsZoomImage=_wantsZoomImage;
@property BOOL wantsFullSizeImage; // @synthesize wantsFullSizeImage=_wantsFullSizeImage;
@property BOOL wantsZoomToFitImage; // @synthesize wantsZoomToFitImage=_wantsZoomToFitImage;
@property BOOL wantsBackFillImage; // @synthesize wantsBackFillImage=_wantsBackFillImage;
@property(readonly) NSString *name; // @synthesize name=_name;
@property __weak id <PAImageAssetClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didComputeHistogram:(id)arg1 updateNumber:(unsigned long long)arg2;
- (BOOL)wantsHistogram;
- (void)_notifyDidUpdateImage:(id)arg1 type:(id)arg2 region:(id)arg3 updateNumber:(unsigned long long)arg4 isCurrent:(BOOL)arg5;
- (void)didUpdateImage:(id)arg1 type:(id)arg2 region:(id)arg3 updateNumber:(unsigned long long)arg4 isCurrent:(BOOL)arg5;
- (void)_notifyGeometryChanged:(struct CGSize)arg1 orientation:(long long)arg2 updateNumber:(unsigned long long)arg3;
- (void)geometryChanged:(struct CGSize)arg1 orientation:(long long)arg2 updateNumber:(unsigned long long)arg3;
- (void)_notifyDidLoadMasterImage;
- (void)didLoadMasterImage;
- (void)_notifyFailedToLoadMasterImage:(id)arg1;
- (void)failedToLoadMasterImage:(id)arg1;
- (void)_notifyWillLoadMasterImage;
- (void)willLoadMasterImage;
- (void)ready;
- (void)hold;
- (void)update;
- (double)estimatedWaitTimeForImage;
- (BOOL)willLoadImage;
@property struct CGRect currentROI;
- (void)_ensureScaleConsistency;
@property(readonly) double backfillScale;
- (void)_setCurrentScale:(double)arg1;
@property double currentScale;
- (void)_setFitScale:(double)arg1;
@property double fitScale;
- (double)_estimatedWaitTimeForContext:(id)arg1;
@property(readonly) unsigned long long updateNumber;
@property(readonly) BOOL isImageUpToDate;
@property(readonly) PAMultiLevelImage *image;
@property(readonly) long long imageOrientation;
@property(readonly) struct CGSize originalImageSize;
- (void)_setImage:(id)arg1;
- (void)_updateDisplay:(id)arg1;
@property(retain) PADisplay *display;
- (BOOL)_isActive;
- (BOOL)isActive;
- (void)detach;
- (id)asset;
- (void)attach:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)initWithName:(id)arg1;
- (id)init;
- (id)debugMemoryInfo;

@end

